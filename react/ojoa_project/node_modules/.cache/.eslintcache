[{"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\index.js":"1","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\App.js":"2","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\components\\Header\\Header.jsx":"3","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\components\\Footer\\Footer.jsx":"4","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\AsyncBankBook.jsx":"5","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\OrderState.jsx":"6","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\ThumbNail.jsx":"7","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Order\\Order.jsx":"8","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductDetail\\ProductDetail.jsx":"9","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductList\\ProductList.jsx":"10","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Join\\Agree.jsx":"11","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Cart\\Cart.jsx":"12","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductList\\ProductListItem.jsx":"13","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\components\\TopButton.jsx":"14","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Login\\Login.jsx":"15","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductDetail\\OrderReview02.jsx":"16","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Join\\Info.jsx":"17","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Main\\MiniSection.jsx":"18","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductList\\PLFilter.jsx":"19","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\components\\Modal\\Modal.jsx":"20","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\components\\Modal\\ModalBasic.jsx":"21","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Cart\\CartHeader.jsx":"22","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Cart\\CartList.jsx":"23","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Cart\\CartTotal.jsx":"24","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Main\\Main.jsx":"25","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Store\\Store.jsx":"26","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\NotFound\\NotFound.jsx":"27","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\MyPage.jsx":"28","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Main\\FlipRoom.jsx":"29","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Main\\SlideImg.jsx":"30","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Store\\Stores.jsx":"31","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\MyshopMain.jsx":"32","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Join\\Popup.jsx":"33","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductDetail\\DetailInfo01.jsx":"34","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductDetail\\ProdQna03.jsx":"35","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\components\\Pagination\\Pagination.jsx":"36","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductDetail\\PurGuide04.jsx":"37","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Qna\\Qna.jsx":"38","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Qna\\QnaModal\\ModalContext.jsx":"39","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Qna\\QnaModal\\QnaModal.jsx":"40","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Qna\\QnaWriteBtn.jsx":"41","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Qna\\QnaListItem.jsx":"42","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Qna\\QnaFilter.jsx":"43","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Qna\\QnaTitleList.jsx":"44","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductDetail\\Modal\\AddCart.jsx":"45","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Main\\MiniItems.jsx":"46","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductDetail\\Modal\\RModal.jsx":"47","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\MyShop\\Mileage.jsx":"48","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\data\\ItemsData.jsx":"49","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductDetail\\Modal\\QModal.jsx":"50","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\components\\ScrollToTop.jsx":"51","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\MyShop\\MileageUnavailList.jsx":"52","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\MyShop\\MileageHistoryList.jsx":"53","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\MyShop\\MileageCouponList.jsx":"54","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\MyShop\\MileageHelp.jsx":"55","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Qna\\QnaPage.jsx":"56","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Login\\FindPasswordModal\\FindPasswordModal.jsx":"57","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Login\\FindIdModal\\FindIdModal.jsx":"58","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Checkout\\Checkout.jsx":"59"},{"size":267,"mtime":1692337896000,"results":"60","hashOfConfig":"61"},{"size":4014,"mtime":1695713596260,"results":"62","hashOfConfig":"61"},{"size":5150,"mtime":1695713261752,"results":"63","hashOfConfig":"61"},{"size":5082,"mtime":1692838718000,"results":"64","hashOfConfig":"61"},{"size":2360,"mtime":1692611554000,"results":"65","hashOfConfig":"61"},{"size":2025,"mtime":1692337896000,"results":"66","hashOfConfig":"61"},{"size":1191,"mtime":1692165036000,"results":"67","hashOfConfig":"61"},{"size":3792,"mtime":1692336998000,"results":"68","hashOfConfig":"61"},{"size":8891,"mtime":1695713261771,"results":"69","hashOfConfig":"61"},{"size":15049,"mtime":1695709047643,"results":"70","hashOfConfig":"61"},{"size":31999,"mtime":1692165036000,"results":"71","hashOfConfig":"61"},{"size":5402,"mtime":1695713261758,"results":"72","hashOfConfig":"61"},{"size":2335,"mtime":1695713261772,"results":"73","hashOfConfig":"61"},{"size":1590,"mtime":1692769800000,"results":"74","hashOfConfig":"61"},{"size":6951,"mtime":1695713261764,"results":"75","hashOfConfig":"61"},{"size":3717,"mtime":1692610352000,"results":"76","hashOfConfig":"61"},{"size":16459,"mtime":1692769240000,"results":"77","hashOfConfig":"61"},{"size":2982,"mtime":1692838718000,"results":"78","hashOfConfig":"61"},{"size":1041,"mtime":1692336998000,"results":"79","hashOfConfig":"61"},{"size":1229,"mtime":1692769800000,"results":"80","hashOfConfig":"61"},{"size":5553,"mtime":1692769800000,"results":"81","hashOfConfig":"61"},{"size":875,"mtime":1692609086000,"results":"82","hashOfConfig":"61"},{"size":4308,"mtime":1692769240000,"results":"83","hashOfConfig":"61"},{"size":3575,"mtime":1695713261759,"results":"84","hashOfConfig":"61"},{"size":395,"mtime":1692168988000,"results":"85","hashOfConfig":"61"},{"size":276,"mtime":1692611554000,"results":"86","hashOfConfig":"61"},{"size":362,"mtime":1692611554000,"results":"87","hashOfConfig":"61"},{"size":555,"mtime":1692611554000,"results":"88","hashOfConfig":"61"},{"size":3106,"mtime":1692781512000,"results":"89","hashOfConfig":"61"},{"size":3319,"mtime":1692168988000,"results":"90","hashOfConfig":"61"},{"size":2464,"mtime":1695713261800,"results":"91","hashOfConfig":"61"},{"size":3622,"mtime":1692838718000,"results":"92","hashOfConfig":"61"},{"size":1350,"mtime":1692338012000,"results":"93","hashOfConfig":"61"},{"size":913,"mtime":1692613790000,"results":"94","hashOfConfig":"61"},{"size":1401,"mtime":1692610352000,"results":"95","hashOfConfig":"61"},{"size":1314,"mtime":1695713261754,"results":"96","hashOfConfig":"61"},{"size":5193,"mtime":1692336998000,"results":"97","hashOfConfig":"61"},{"size":7748,"mtime":1695713261775,"results":"98","hashOfConfig":"61"},{"size":752,"mtime":1692632474000,"results":"99","hashOfConfig":"61"},{"size":6927,"mtime":1692781776000,"results":"100","hashOfConfig":"61"},{"size":735,"mtime":1692694712000,"results":"101","hashOfConfig":"61"},{"size":4181,"mtime":1695713261779,"results":"102","hashOfConfig":"61"},{"size":2509,"mtime":1695713261776,"results":"103","hashOfConfig":"61"},{"size":697,"mtime":1692781776000,"results":"104","hashOfConfig":"61"},{"size":637,"mtime":1692613790000,"results":"105","hashOfConfig":"61"},{"size":1976,"mtime":1692838718000,"results":"106","hashOfConfig":"61"},{"size":12752,"mtime":1692769664000,"results":"107","hashOfConfig":"61"},{"size":3451,"mtime":1692611554000,"results":"108","hashOfConfig":"61"},{"size":12716,"mtime":1692781512000,"results":"109","hashOfConfig":"61"},{"size":4860,"mtime":1692613790000,"results":"110","hashOfConfig":"61"},{"size":848,"mtime":1695713261755,"results":"111","hashOfConfig":"61"},{"size":2590,"mtime":1695713261769,"results":"112","hashOfConfig":"61"},{"size":3192,"mtime":1695713261768,"results":"113","hashOfConfig":"61"},{"size":2595,"mtime":1695713261768,"results":"114","hashOfConfig":"61"},{"size":1004,"mtime":1692611554000,"results":"115","hashOfConfig":"61"},{"size":677,"mtime":1692675266000,"results":"116","hashOfConfig":"61"},{"size":7126,"mtime":1692781776000,"results":"117","hashOfConfig":"61"},{"size":5334,"mtime":1692782130000,"results":"118","hashOfConfig":"61"},{"size":13429,"mtime":1695713261762,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},"smu84l",{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"123"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"123"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"123"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"123"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"123"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"123"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"123"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"123"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"123"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"123"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"123"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"123"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"123"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"123"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"123"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"123"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"123"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"123"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"123"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"123"},{"filePath":"273","messages":"274","suppressedMessages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"123"},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"123"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"123"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"123"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"123"},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"123"},{"filePath":"306","messages":"307","suppressedMessages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"123"},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"123"},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"123"},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\index.js",[],[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\App.js",["327","328"],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\components\\Header\\Header.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\components\\Footer\\Footer.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\AsyncBankBook.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\OrderState.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\ThumbNail.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Order\\Order.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductDetail\\ProductDetail.jsx",["329","330","331","332","333","334","335"],[],"import React, { useState } from \"react\";\r\nimport \"./ProductDetail.css\";\r\nimport { NavLink, Routes, Route, useParams, Link, useLocation } from \"react-router-dom\"\r\nimport DetailInfo01 from './DetailInfo01';\r\nimport OrderReview02 from './OrderReview02';\r\nimport ProdQna03 from './ProdQna03';\r\nimport PurGuide04 from './PurGuide04';\r\nimport mockList from '../../data/ItemsData'\r\nimport Modal from 'react-modal';\r\nimport AddCart from './Modal/AddCart';\r\n\r\n\r\nfunction ProductDetail({ handleCart }) {\r\n\r\n    // 상품목록리스트에서 id 값에 따라 상품 상세 반영하기\r\n    const { mockList_id } = useParams();\r\n    const indiItem = mockList.filter((content) => content.id === parseInt(mockList_id))\r\n    const { id, imgNo, productName, productPriceFormatted, productPromotion, productInfo, productReview, productGrade } = indiItem[0]\r\n    //======================================\r\n    // 수량 변경한 만큼 가격에 계산\r\n    const [count, setCount] = useState(1);\r\n\r\n\r\n\r\n    // 장바구니 기능\r\n    // 장바구니에 물건\r\n    const handleAddToCart = () => {\r\n        const cartItem = {\r\n            id: id,\r\n            imgNo: imgNo,\r\n            productName: productName,\r\n            productPriceFormatted: productPriceFormatted,\r\n            productPromotion: productPromotion,\r\n            productInfo: productInfo,\r\n            productReview: productReview,\r\n            productGrade: productGrade,\r\n            quantity: count,\r\n        };\r\n        handleCart(cartItem);\r\n    };\r\n\r\n\r\n    // // 장바구니 추가 모달창 띄우기\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n    const openModal = () => setModalIsOpen(true);\r\n    const closeModal = () => setModalIsOpen(false);\r\n\r\n\r\n    function handleCartAndOpenModal() {\r\n        handleAddToCart();\r\n        openModal();\r\n    }\r\n    // if (indiItem.length > 0) {\r\n    //     return \"상품 있음\"\r\n    // } else {\r\n    //     return \"상품 없음\"\r\n    // }\r\n\r\n\r\n    //======================================\r\n    // 수량 변경한 만큼 가격에 계산\r\n    const onDecrease = () => {\r\n        if (count >= 2) {\r\n            setCount(count - 1);\r\n        }\r\n    }\r\n\r\n    const onIncrease = () => {\r\n        if (count >= 1) {\r\n\r\n            setCount(count + 1);\r\n        }\r\n    }\r\n\r\n    const sellPrice = productPriceFormatted.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    const sum = count * productPriceFormatted;\r\n\r\n    const result = sum.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n    //======================================\r\n    // 대표 썸네일 이미지 클릭시 변경\r\n    const imgChange = (e) => {\r\n        setMainImg(e)\r\n    };\r\n\r\n    //======================================\r\n    // 대표 썸네일 이미지 클릭시 변경\r\n    const [mainImg, setMainImg] = useState(`../thumbs/${imgNo}_1.jpg`);\r\n\r\n\r\n    const test = mockList.map((content) => {\r\n\r\n        return (\r\n            <li><img onClick={() => imgChange(`/thumbs/${imgNo}_1.jpg`)} src={`/thumbs/${imgNo}_1.jpg`} alt=\"\" id=\"thumb1\" /></li>\r\n        );\r\n    });\r\n\r\n\r\n    //======================================\r\n\r\n    // 상품 상세페이지 4가지 섹션으로 나뉘어지는 갈래\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div className=\"ProductDetail\">\r\n            <div className=\"path\">\r\n                <span>현재 위치</span>\r\n                <ol>\r\n                    <li><NavLink to=\"/\">홈</NavLink></li>\r\n                    {/* <li><NavLink to=\"/ProductList\">&gt; &nbsp;&nbsp;의자</NavLink></li> */}\r\n                    <li title=\"현재 위치\">&gt; &nbsp;&nbsp;현재 위치</li>\r\n                </ol>\r\n            </div>\r\n            {/* <!-- main product detail --> */}\r\n            {/* <!-- product detail dt 로 요약 --> */}\r\n\r\n            <div className=\"product_view\">\r\n                <h2>{productName}</h2>\r\n                <table>\r\n                    <caption>\r\n                        <details className=\"hide\">\r\n                            <summary>상품정보</summary>\r\n                            판매가&#44; 상품코드&#44; 옵션 및 결제금액 안내\r\n                        </details>\r\n                    </caption>\r\n\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>판매가</th>\r\n                            <td className=\"price\">{sellPrice}원</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>상품코드</th>\r\n                            <td>0000{id}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>제조사/공급사</th>\r\n                            <td>OJOA &#47; 오조아생활연구소</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>구매수량</th>\r\n                            <td>\r\n                                <div className=\"pd_length\">\r\n                                    <button onClick={onDecrease}>-</button>\r\n                                    <input type=\"number\" min=\"1\" value={count} />\r\n                                    <button onClick={onIncrease}>+</button>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>사용가능쿠폰</th>\r\n                            <td>\r\n                                <select>\r\n                                    <option>-</option>\r\n                                    {/* <option>신규가입쿠폰 5%</option> */}\r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>옵션선택</th>\r\n                            <td>\r\n                                <select>\r\n                                    <option>기본&#40; &#43;0  &#41;</option>\r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>배송비</th>\r\n                            <td>무료배송</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>결제금액</th>\r\n                            <td className=\"total\"><strong>{result}</strong>원</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div className=\"pd_img\">\r\n                    <img src={mainImg} alt=\"\" id=\"mainImg\" />\r\n                    <ul>\r\n                        <li><img onClick={() => imgChange(`../thumbs/${imgNo}_1.jpg`)} src={`../thumbs/${imgNo}_1.jpg`} alt=\"\" id=\"thumb1\" /></li>\r\n                        <li><img onClick={() => imgChange(`../thumbs/${imgNo}_2.jpg`)} src={`../thumbs/${imgNo}_2.jpg`} alt=\"\" id=\"thumb2\" /></li>\r\n                        <li><img onClick={() => imgChange(`../thumbs/${imgNo}_3.jpg`)} src={`../thumbs/${imgNo}_3.jpg`} alt=\"\" id=\"thumb3\" /></li>\r\n                        <li><img onClick={() => imgChange(`../thumbs/${imgNo}_4.jpg`)} src={`../thumbs/${imgNo}_4.jpg`} alt=\"\" id=\"thumb4\" /></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"pd_btns\">\r\n                    <a onClick={handleCartAndOpenModal} className=\"pd_btn1\">장바구니</a>\r\n                    <Modal className=\"ModalContent\" handleCart={handleCart} isOpen={modalIsOpen} onRequestClose={closeModal}>\r\n                        <AddCart closeModal={closeModal} />\r\n                    </Modal>\r\n                    <Link to='../Cart/Cart' className=\"pd_btn2\" onClick={() => handleAddToCart()}>구매하기</Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"PdIndex00\">\r\n                <div className=\"pd_section\">\r\n                    <a><NavLink to=\"./DetailInfo01\" activeClassName=\"active\"exact>\r\n                        <strong>상품상세정보</strong></NavLink></a>\r\n                    <a><NavLink to=\"./OrderReview02\" activeClassName=\"active\" >\r\n                        <strong>상품구매후기</strong></NavLink></a>\r\n                    <a><NavLink to=\"./ProdQna03\" activeClassName=\"active\" >\r\n                        <strong>상품 Q&amp;A</strong></NavLink></a>\r\n                    <a><NavLink to=\"./PurGuide04\" activeClassName=\"active\" >\r\n                        <strong>상품구매안내</strong></NavLink></a>\r\n                </div>\r\n            </div>\r\n\r\n            <Routes>\r\n                <Route path=\"/*\" element={<DetailInfo01 />} />\r\n                <Route path=\"/OrderReview02\" element={<OrderReview02 />} />\r\n                <Route path=\"/ProdQna03\" element={<ProdQna03 />} />\r\n                <Route path=\"/PurGuide04\" element={<PurGuide04 />} />\r\n            </Routes>\r\n        </div >\r\n\r\n    )\r\n};\r\n\r\nexport default ProductDetail;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductList\\ProductList.jsx",["336","337","338","339","340"],[],"import React, { useContext, createContext, useReducer, useRef, useState } from \"react\";\r\nimport ProductListItem from \"./ProductListItem\";\r\nimport \"./ProductList.css\";\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\nimport PLFilter from \"./PLFilter\";\r\nimport { Link } from \"react-router-dom\";\r\nimport mockList from '../../data/ItemsData'\r\nimport Modal from 'react-modal';\r\n// import AddCart from './Modal/AddCart';\r\n\r\n\r\n\r\n\r\nfunction sortProducts(products, sortKey) {\r\n    switch (sortKey) {\r\n        case \"신상품\":\r\n            return products.slice().sort((a, b) => b.id - a.id);\r\n        case \"상품명\":\r\n            return products.slice().sort((a, b) => a.productName.localeCompare(b.productName));\r\n        case \"낮은가격\":\r\n            return products.slice().sort((a, b) => parseFloat(a.productPriceFormatted.replace(/,/g, \"\")) - parseFloat(b.productPriceFormatted.replace(/,/g, \"\")));\r\n        case \"높은가격\":\r\n            return products.slice().sort((a, b) => parseFloat(b.productPriceFormatted.replace(/,/g, \"\")) - parseFloat(a.productPriceFormatted.replace(/,/g, \"\")));\r\n        case \"사용후기\":\r\n            return products.slice().sort((a, b) => parseInt(b.productReview) - parseInt(a.productReview));\r\n        case \"Best\": // 새로 추가한 BEST 카테고리 정렬 (별점높은순)\r\n            return products.slice().sort((a, b) => parseFloat(b.productGrade) - parseFloat(a.productGrade));\r\n        case \"New\": // 새로 추가한 New 카테고리 정렬 (각 타입별 id의 숫자가 높은 순으로-2개)\r\n            return products.slice().sort((a, b) => parseFloat(b.productGrade) - parseFloat(a.productGrade));\r\n        default:\r\n            return products.slice().sort((a, b) => a.id - b.id);\r\n    }\r\n}\r\n\r\n\r\n//카테고리 : 의자\r\nfunction Chair({ cart, setCart, handleCart }) {\r\n    const chair_filter = mockList.filter((chair) => chair.type === 'chair');\r\n\r\n    const [sortKey, setSortKey] = useState(\"\"); // 초기 정렬 기준: 신상품\r\n\r\n\r\n    const sortedList = sortProducts(chair_filter, sortKey);\r\n\r\n\r\n    const singleLi = sortedList.map((content) => (\r\n        <li key={content.id}>\r\n            <ProductListItem content={content} cart={cart} setCart={setCart} handleCart={handleCart}>\r\n                <Link className=\"productLink\" to={`/products/detail/${content.id}`} key={content.id}>\r\n                    {content.productName}\r\n                </Link>\r\n            </ProductListItem>\r\n            {/* <CategoryIndex content={content} cart={cart} setCart={setCart} >\r\n                <Link className=\"productLink\" to={`/products/detail/${content.id}`} key={content.id}></Link>\r\n            </CategoryIndex> */}\r\n        </li>\r\n    ));\r\n\r\n\r\n    return (\r\n        <div className=\"ProductList\">\r\n            <div className=\"path\">\r\n                <span>현재 위치</span>\r\n                <ol>\r\n                    <li><Link to=\"/\">홈</Link></li>\r\n                    <li title=\"현재 위치\">&gt; &nbsp;&nbsp;의자</li>\r\n                </ol>\r\n            </div>\r\n            <div className=\"pageTlt\">\r\n                <h2>CHAIR</h2>\r\n                <div className=\"txt_01\">의자 전체 상품</div>\r\n            </div>\r\n            <PLFilter numOfList={sortedList.length} setSortKey={setSortKey} />\r\n\r\n            <ul className=\"pl_items\">{singleLi}</ul>\r\n\r\n            <Pagination />\r\n        </div>\r\n\r\n    )\r\n\r\n}; //Chair\r\n\r\nconst Bed = ({ cart, setCart, handleCart }) => {\r\n\r\n    const bed_filter = mockList.filter((bed) => bed.type === 'bed');\r\n\r\n    const [sortKey, setSortKey] = useState(\"\"); // 초기 정렬 기준: 신상품\r\n\r\n\r\n    const sortedList = sortProducts(bed_filter, sortKey);\r\n\r\n\r\n    const singleLi = sortedList.map((content) => (\r\n        <li key={content.id}>\r\n            <ProductListItem content={content} cart={cart} setCart={setCart} handleCart={handleCart}>\r\n                <Link className=\"productLink\" to={`/products/detail/${content.id}`} key={content.id}>\r\n                    {content.productName}\r\n                </Link>\r\n            </ProductListItem>\r\n            {/* <CategoryIndex content={content} cart={cart} setCart={setCart} >\r\n                <Link className=\"productLink\" to={`/products/detail/${content.id}`} key={content.id}></Link>\r\n            </CategoryIndex> */}\r\n        </li>\r\n    ));\r\n\r\n\r\n    return (\r\n        <div className=\"ProductList\">\r\n            <div className=\"path\">\r\n                <span>현재 위치</span>\r\n                <ol>\r\n                    <li><Link to=\"/\">홈</Link></li>\r\n                    <li title=\"현재 위치\">&gt; &nbsp;&nbsp;침대</li>\r\n                </ol>\r\n            </div>\r\n            <div className=\"pageTlt\">\r\n                <h2>BED</h2>\r\n                <div className=\"txt_01\">침대 전체 상품</div>\r\n            </div>\r\n            <PLFilter numOfList={sortedList.length} setSortKey={setSortKey} />\r\n\r\n            <ul className=\"pl_items\">{singleLi}</ul>\r\n\r\n            <Pagination />\r\n        </div>\r\n\r\n    )\r\n}; //Bed\r\n\r\nconst Sofa = ({ cart, setCart, handleCart }) => {\r\n\r\n    const sofa_filter = mockList.filter((sofa) => sofa.type === 'sofa');\r\n\r\n    const [sortKey, setSortKey] = useState(\"\"); // 초기 정렬 기준: 신상품\r\n\r\n\r\n    const sortedList = sortProducts(sofa_filter, sortKey);\r\n\r\n\r\n    const singleLi = sortedList.map((content) => (\r\n        <li key={content.id}>\r\n            <ProductListItem content={content} cart={cart} setCart={setCart} handleCart={handleCart}>\r\n                <Link className=\"productLink\" to={`/products/detail/${content.id}`} key={content.id}>\r\n                    {content.productName}\r\n                </Link>\r\n            </ProductListItem>\r\n            {/* <CategoryIndex content={content} cart={cart} setCart={setCart} >\r\n                <Link className=\"productLink\" to={`/products/detail/${content.id}`} key={content.id}></Link>\r\n            </CategoryIndex> */}\r\n        </li>\r\n    ));\r\n\r\n\r\n    return (\r\n        <div className=\"ProductList\">\r\n            <div className=\"path\">\r\n                <span>현재 위치</span>\r\n                <ol>\r\n                    <li><Link to=\"/\">홈</Link></li>\r\n                    <li title=\"현재 위치\">&gt; &nbsp;&nbsp;소파</li>\r\n                </ol>\r\n            </div>\r\n            <div className=\"pageTlt\">\r\n                <h2>SOFA</h2>\r\n                <div className=\"txt_01\">소파 전체 상품</div>\r\n            </div>\r\n            <PLFilter numOfList={sortedList.length} setSortKey={setSortKey} />\r\n\r\n            <ul className=\"pl_items\">{singleLi}</ul>\r\n\r\n            <Pagination />\r\n        </div>\r\n\r\n    )\r\n}; //Sofa\r\n\r\nconst Bookshelf = ({ cart, setCart, handleCart }) => {\r\n\r\n    const bookshelf_filter = mockList.filter((bookshelf) => bookshelf.type === 'bookshelf');\r\n\r\n    const [sortKey, setSortKey] = useState(\"\"); // 초기 정렬 기준: 신상품\r\n\r\n\r\n    const sortedList = sortProducts(bookshelf_filter, sortKey);\r\n\r\n\r\n    const singleLi = sortedList.map((content) => (\r\n        <li key={content.id}>\r\n            <ProductListItem content={content} cart={cart} setCart={setCart} handleCart={handleCart}>\r\n                <Link className=\"productLink\" to={`/products/detail/${content.id}`} key={content.id}>\r\n                    {content.productName}\r\n                </Link>\r\n            </ProductListItem>\r\n            {/* <CategoryIndex content={content} cart={cart} setCart={setCart} >\r\n                <Link className=\"productLink\" to={`/products/detail/${content.id}`} key={content.id}></Link>\r\n            </CategoryIndex> */}\r\n        </li>\r\n    ));\r\n\r\n\r\n    return (\r\n        <div className=\"ProductList\">\r\n            <div className=\"path\">\r\n                <span>현재 위치</span>\r\n                <ol>\r\n                    <li><Link to=\"/\">홈</Link></li>\r\n                    <li title=\"현재 위치\">&gt; &nbsp;&nbsp;책장</li>\r\n                </ol>\r\n            </div>\r\n            <div className=\"pageTlt\">\r\n                <h2>BOOKSHELF</h2>\r\n                <div className=\"txt_01\">책장 전체 상품</div>\r\n            </div>\r\n            <PLFilter numOfList={sortedList.length} setSortKey={setSortKey} />\r\n\r\n            <ul className=\"pl_items\">{singleLi}</ul>\r\n\r\n            <Pagination />\r\n        </div>\r\n\r\n    )\r\n}; //Bookshelf\r\n\r\nconst Closet = ({ cart, setCart, handleCart }) => {\r\n\r\n    const closet_filter = mockList.filter((closet) => closet.type === 'closet');\r\n\r\n    const [sortKey, setSortKey] = useState(\"\"); // 초기 정렬 기준: 신상품\r\n\r\n\r\n    const sortedList = sortProducts(closet_filter, sortKey);\r\n\r\n\r\n    const singleLi = sortedList.map((content) => (\r\n        <li key={content.id}>\r\n            <ProductListItem content={content} cart={cart} setCart={setCart} handleCart={handleCart}>\r\n                <Link className=\"productLink\" to={`/products/detail/${content.id}`} key={content.id}>\r\n                    {content.productName}\r\n                </Link>\r\n            </ProductListItem>\r\n            {/* <CategoryIndex content={content} cart={cart} setCart={setCart} >\r\n                <Link className=\"productLink\" to={`/products/detail/${content.id}`} key={content.id}></Link>\r\n            </CategoryIndex> */}\r\n        </li>\r\n    ));\r\n\r\n\r\n    return (\r\n        <div className=\"ProductList\">\r\n            <div className=\"path\">\r\n                <span>현재 위치</span>\r\n                <ol>\r\n                    <li><Link to=\"/\">홈</Link></li>\r\n                    <li title=\"현재 위치\">&gt; &nbsp;&nbsp;옷장</li>\r\n                </ol>\r\n            </div>\r\n            <div className=\"pageTlt\">\r\n                <h2>CLOSET</h2>\r\n                <div className=\"txt_01\">옷장 전체 상품</div>\r\n            </div>\r\n            <PLFilter numOfList={sortedList.length} setSortKey={setSortKey} />\r\n\r\n            <ul className=\"pl_items\">{singleLi}</ul>\r\n\r\n            <Pagination />\r\n        </div>\r\n\r\n    )\r\n}; //Closet\r\n\r\nconst Lighting = ({ cart, setCart, handleCart }) => {\r\n\r\n    const lighting_filter = mockList.filter((lighting) => lighting.type === 'lighting');\r\n\r\n    const [sortKey, setSortKey] = useState(\"\"); // 초기 정렬 기준: 신상품\r\n\r\n\r\n    const sortedList = sortProducts(lighting_filter, sortKey);\r\n\r\n\r\n    const singleLi = sortedList.map((content) => (\r\n        <li key={content.id}>\r\n            <ProductListItem content={content} cart={cart} setCart={setCart} handleCart={handleCart}>\r\n                <Link className=\"productLink\" to={`/products/detail/${content.id}`} key={content.id}>\r\n                    {content.productName}\r\n                </Link>\r\n            </ProductListItem>\r\n            {/* <CategoryIndex content={content} cart={cart} setCart={setCart} >\r\n                <Link className=\"productLink\" to={`/products/detail/${content.id}`} key={content.id}></Link>\r\n            </CategoryIndex> */}\r\n        </li>\r\n    ));\r\n\r\n\r\n    return (\r\n        <div className=\"ProductList\">\r\n            <div className=\"path\">\r\n                <span>현재 위치</span>\r\n                <ol>\r\n                    <li><Link to=\"/\">홈</Link></li>\r\n                    <li title=\"현재 위치\">&gt; &nbsp;&nbsp;조명</li>\r\n                </ol>\r\n            </div>\r\n            <div className=\"pageTlt\">\r\n                <h2>LIGHTING</h2>\r\n                <div className=\"txt_01\">조명 전체 상품</div>\r\n            </div>\r\n            <PLFilter numOfList={sortedList.length} setSortKey={setSortKey} />\r\n\r\n            <ul className=\"pl_items\">{singleLi}</ul>\r\n\r\n            <Pagination />\r\n        </div>\r\n\r\n    )\r\n}; //Closet\r\n\r\n// Best 추가\r\nconst Best = ({ cart, setCart, handleCart }) => {\r\n    // 모든 상품 목록에서 Best 상품만 필터링\r\n    const bestProducts = mockList.filter((product) => parseFloat(product.productGrade) >= 4.8);\r\n\r\n    // Best 상품을 등급 기준으로 정렬\r\n    const sortedList = bestProducts.sort((a, b) => parseFloat(b.productGrade) - parseFloat(a.productGrade));\r\n\r\n    const singleLi = sortedList.map((content) => (\r\n        <li key={content.id}>\r\n            <ProductListItem content={content} cart={cart} setCart={setCart} handleCart={handleCart}>\r\n                <Link className=\"productLink\" to={`/products/detail/${content.id}`} key={content.id}>\r\n                    {content.productName}\r\n                </Link>\r\n            </ProductListItem>\r\n        </li>\r\n    ));\r\n\r\n    return (\r\n        <div className=\"ProductList\">\r\n            <div className=\"path\">\r\n                <span>현재 위치</span>\r\n                <ol>\r\n                    <li><Link to=\"/\">홈</Link></li>\r\n                    <li title=\"현재 위치\">&gt; &nbsp;&nbsp;BEST</li>\r\n                </ol>\r\n            </div>\r\n            <div className=\"pageTlt\">\r\n                <h2>BEST</h2>\r\n                <div className=\"txt_01\">BEST 상품 전체 목록</div>\r\n            </div>\r\n            <ul className=\"pl_items\">{singleLi}</ul>\r\n\r\n            <Pagination />\r\n        </div>\r\n\r\n    )\r\n}; //Best\r\n\r\n\r\n// New 추가\r\nconst New = ({ cart, setCart, handleCart }) => {\r\n        // 각 타입별로 id의 숫자가 큰 아이템 2개씩 선택\r\n        const newProducts = [\r\n            ...mockList.filter((product) => product.type === 'chair').slice(0, 2),\r\n            ...mockList.filter((product) => product.type === 'bed').slice(0, 2),\r\n            ...mockList.filter((product) => product.type === 'sofa').slice(0, 2),\r\n            ...mockList.filter((product) => product.type === 'bookshelf').slice(0, 2),\r\n            ...mockList.filter((product) => product.type === 'closet').slice(0, 2),\r\n            ...mockList.filter((product) => product.type === 'lighting').slice(0, 2),\r\n        ];\r\n    \r\n        // \"New\" 카테고리 정렬 (각 타입별로 id의 숫자가 큰 순서)\r\n        const sortedList = newProducts.sort((a, b) => b.id - a.id);\r\n    \r\n        const singleLi = sortedList.map((content) => (\r\n            <li key={content.id}>\r\n                <ProductListItem content={content} cart={cart} setCart={setCart} handleCart={handleCart}>\r\n                    <Link className=\"productLink\" to={`/products/detail/${content.id}`} key={content.id}>\r\n                        {content.productName}\r\n                    </Link>\r\n                </ProductListItem>\r\n            </li>\r\n        ));\r\n    \r\n        return (\r\n            <div className=\"ProductList\">\r\n                <div className=\"path\">\r\n                    <span>현재 위치</span>\r\n                    <ol>\r\n                        <li><Link to=\"/\">홈</Link></li>\r\n                        <li title=\"현재 위치\">&gt; &nbsp;&nbsp;NEW</li>\r\n                    </ol>\r\n                </div>\r\n                <div className=\"pageTlt\">\r\n                    <h2>NEW</h2>\r\n                    <div className=\"txt_01\">NEW 상품 전체 목록</div>\r\n                </div>\r\n                <ul className=\"pl_items\">{singleLi}</ul>\r\n    \r\n                <Pagination />\r\n            </div>\r\n        );\r\n    }; // New\r\n\r\n\r\n\r\nexport { Chair, Bed, Sofa, Closet, Bookshelf, Lighting, Best, New };","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Join\\Agree.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Cart\\Cart.jsx",["341","342"],[],"import React, { useState, useEffect } from 'react';\r\nimport '../../pages/Cart/Cart.css';\r\nimport CartHeader from '../../pages/Cart/CartHeader';\r\nimport CartList from '../../pages/Cart/CartList';\r\nimport CartTotal from '../../pages/Cart/CartTotal';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst Cart = ({ cart, convertPrice }) => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    // 상태 관리할 state 추가\r\n    const [cartState, setCartState] = useState(cart);\r\n    // 전체 선택 체크 여부 상태\r\n    const [isAllChecked, setIsAllChecked] = useState(false);\r\n    // 선택된 아이템 상태\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n    // 선택된 상품들의 합계들의 총합(결제금액) 상태 추가\r\n    // *selectedItemsTotal: 선택된 항목의 총 가격을 저장\r\n    const [selectedItemsTotal, setSelectedItemsTotal] = useState(0);\r\n\r\n\r\n    // 선택한 아이템의 합계를 업데이트하는 함수\r\n    //updateTotal: 선택된 항목의 총 가격을 계산하고 업데이트\r\n    const updateTotal = () => {\r\n        const total = calculateSelectedTotal();\r\n        setSelectedItemsTotal(total);\r\n    };\r\n\r\n\r\n   // 컴포넌트 마운트 후와 cart prop 변경 시 실행\r\n    useEffect(() => {\r\n        setCartState(cart);   // 카트 상태 업데이트\r\n        updateTotal();\r\n    }, [cart]);\r\n\r\n\r\n   // 선택된 아이템 변경 시 실행\r\n    //selectedItems 배열이 변경될 때마다 선택된 항목의 총 가격을 업데이트\r\n    useEffect(() => {\r\n        updateTotal(); // 선택된 아이템이 변경될 때마다 합계 업데이트\r\n    }, [selectedItems]);\r\n\r\n\r\n    // handleRemoveFromCart: ID를 기반으로 카트에서 항목을 제거하고 총 가격을 업데이트\r\n    const handleRemoveFromCart = (itemId) => {\r\n        const updatedCart = cartState.filter((item) => item.id !== itemId);\r\n        setCartState(updatedCart);\r\n        updateTotal();\r\n    };\r\n\r\n//handleCheckAll: isAllChecked 상태를 토글하고 \r\n//selectedItems 배열을 그에 맞게 업데이트\r\n    const handleCheckAll = () => {\r\n        setIsAllChecked(!isAllChecked);\r\n        const updatedSelectedItems = !isAllChecked ? cartState.map((item) => item.id) : [];\r\n        setSelectedItems(updatedSelectedItems);\r\n    };\r\n\r\n\r\n    // 수량 감소 -> 합계 변동\r\n    const onDecrease = (itemId) => {\r\n        setCartState((prevCart) =>\r\n            prevCart.map((item) =>\r\n                item.id === itemId\r\n                    ? { ...item, quantity: Math.max(item.quantity - 1, 1) }\r\n                    : item\r\n            )\r\n        );\r\n        updateTotal(); \r\n    };\r\n\r\n    // 수량 증가 -> 합계 변동\r\n    const onIncrease = (itemId) => {\r\n        setCartState((prevCart) =>\r\n            prevCart.map((item) =>\r\n                item.id === itemId ? { ...item, quantity: item.quantity + 1 } : item\r\n            )\r\n        );\r\n        updateTotal();\r\n    };\r\n\r\n\r\n    // 카트에 상품 추가하는 함수\r\n    const addToCart = (cartItem) => {\r\n        setCartState((prevCart) => [...prevCart, cartItem]);\r\n        updateTotal(); // 상품 추가 시 선택한 아이템의 합계 업데이트\r\n    };\r\n\r\n//calculateSelectedTotal: 선택된 모든 항목의 총 가격을 계산\r\n    const calculateSelectedTotal = () => {\r\n        return selectedItems.reduce((total, itemId) => {\r\n            const selectedItem = cartState.find((item) => item.id === itemId);\r\n            if (selectedItem) {\r\n                return total + selectedItem.productPriceFormatted * selectedItem.quantity;\r\n            }\r\n            return total;\r\n        }, 0);\r\n    };\r\n\r\n    /**\r\n     * 주문 정보 DB 저장 후, 결제페이지로 이동\r\n     */\r\n    const handleCheckout = () => {\r\n        navigate('/checkout')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"Cart\">\r\n            <div className=\"path\">\r\n                <span>현재 위치</span>\r\n                <ol>\r\n                    <li>\r\n                        <Link to=\"/\">홈</Link>\r\n                    </li>\r\n                    <li title=\"현재 위치\"> &gt; &nbsp; Cart</li>\r\n                </ol>\r\n            </div>\r\n            <div className=\"title\">\r\n                <h2>CART</h2>\r\n                <div className=\"txt_01\">장바구니에 담긴 상품</div>\r\n            </div>\r\n\r\n            <CartHeader isAllChecked={isAllChecked} handleCheckAll={handleCheckAll} />\r\n\r\n            <CartList\r\n                cart={cartState} // 수정된 상태를 전달\r\n                onDecrease={onDecrease}\r\n                onIncrease={onIncrease}\r\n                handleAddToCart={addToCart} // 상품 추가 함수 전달\r\n                handleRemove={handleRemoveFromCart} // 상품 제거 함수 전달\r\n                convertPrice={convertPrice}\r\n                selectedItems={selectedItems} // 선택된 아이템 전달\r\n                setSelectedItems={setSelectedItems}\r\n                updateTotal={updateTotal}\r\n            />\r\n\r\n            <CartTotal\r\n                cart={cartState}\r\n                convertPrice={convertPrice}\r\n                selectedItems={selectedItems} // 선택된 아이템 리스트 전달\r\n                selectedItemsTotal={selectedItemsTotal} // 선택된 아이템 합계 전달\r\n                onCheckout={handleCheckout}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Cart;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductList\\ProductListItem.jsx",["343","344","345","346","347","348","349","350","351","352","353","354","355","356","357"],[],"import React from \"react\";\r\nimport \"./ProductListItem.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Chair, Bed, Sofa, Closet, Bookshelf, Lighting, Best, New } from '../../data/ItemsData'\r\n\r\nconst ProductListItem = ({ content, onSelect }) => {\r\n\r\n    const productPrice = content.productPriceFormatted.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"ProductListItem\" onClick={onSelect}>\r\n            <section className=\"pl_section\">\r\n                <ul className=\"prodItems\">\r\n                    <li className=\"pl_thumb_img\">\r\n                        <a>\r\n                            <Link to={{\r\n                                key: content.id,\r\n                                pathname: `/ProductDetail/${content.id}`,\r\n                                state: { productData: content } // 선택한 상품 정보를 state로 전달\r\n                            }}>\r\n                                <img src={`/thumbs/${content.imgNo}_1.jpg`} alt={`Product ${content.productName}`} />\r\n                            </Link>\r\n                            <div className=\"pl_icon\">\r\n                                <a className=\"pd_cart\">\r\n                                    <img src={\"../images/cart_icon.png\"} alt=\"장바구니\" />\r\n                                </a>\r\n                                <a className=\"pd_heart\">\r\n                                    <img src={\"../images/heart_icon.png\"} alt=\"관심상품\" />\r\n                                </a>\r\n                            </div>\r\n                        </a>\r\n                    </li>\r\n\r\n                    <li className=\"pl_a\"><a><Link to=\"/ProductDetail\">{content.productName}</Link></a></li>\r\n                    <li className=\"pl_b\"><a><Link to=\"/ProductDetail\">{productPrice}원\r\n                        <span> {content.productPromotion}%</span></Link></a></li>\r\n                    <li className=\"pl_c\"><a><Link to=\"/ProductDetail\">{content.productInfo}</Link></a></li>\r\n                    <li className=\"pl_d\"><a><Link to=\"/ProductDetail\">리뷰 <span>{content.productReview}</span> 평점 *\r\n                        <span>{content.productGrade}/5</span></Link></a></li>\r\n                </ul>\r\n            </section>\r\n        </div >\r\n    )\r\n\r\n\r\n}; //ProductList\r\n\r\nexport default ProductListItem;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\components\\TopButton.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Login\\Login.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductDetail\\OrderReview02.jsx",["358","359"],[],"import React, { useState } from \"react\";\r\nimport \"./ProductDetail.css\";\r\nimport Modal from 'react-modal';\r\nimport RModal from './Modal/RModal';\r\n\r\nconst mockReviewList = [\r\n    {\r\n        num: 1,\r\n        title: '친구 선물해줬더니 너무 좋아하네요',\r\n        writer: '어성은',\r\n        createDate: '2021.11.29',\r\n        check: 18\r\n    },\r\n    {\r\n        num: 2,\r\n        title: '100% 만족합니다',\r\n        writer: '유희상',\r\n        createDate: '2021.12.14',\r\n        check: 15\r\n    },\r\n    {\r\n        num: 3,\r\n        title: '살까 말까 고민한 저를 후회합니다',\r\n        writer: '이진기',\r\n        createDate: '2021.12.28',\r\n        check: 9\r\n    },\r\n    {\r\n        num: 4,\r\n        title: '만족',\r\n        writer: '오원희',\r\n        createDate: '2023.03.14',\r\n        check: 1\r\n    },\r\n]; //mockReviewList\r\n\r\n// 배열 속성 writer 입력시 성만 따오기\r\nconst lastName = (fullName) => {\r\n    if (fullName.length > 0) {\r\n        return fullName.charAt(0);\r\n    };\r\n    return;\r\n};\r\n\r\n\r\nfunction OrderReview02() {\r\n\r\n    // // 모달창 띄우기\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n    const openModal = () => setModalIsOpen(true);\r\n    const closeModal = () => setModalIsOpen(false);\r\n\r\n    // 리뷰리스트 mock 리스트 맵핑\r\n    const singleReviewLi = mockReviewList.map((content) => {\r\n        return (\r\n            <tr>\r\n                <th>{content.num}</th>\r\n                <td>{content.title}</td>\r\n                <td>{lastName(content.writer)}&#42;&#42;</td>\r\n                <td>{content.createDate}</td>\r\n                <td>{content.check}</td>\r\n            </tr>\r\n        );\r\n    });\r\n\r\n    \r\n\r\n\r\n    // 리뷰 내용 자식모달 컴포넌트에서 값 받아오기\r\n    // 리뷰 값 받아온 것을 mockList에 추가하기\r\n    const [reviews, setReviews] = useState([]);\r\n\r\n    const handleReviewTextChange = (reviewText) => {\r\n        const newReview = {\r\n            title: '새 리뷰', // 필요한 속성 추가\r\n            writer: '사용자', // 필요한 속성 추가\r\n            createDate: new Date().toLocaleDateString(), // 필요한 속성 추가\r\n            check: 0, // 필요한 속성 추가\r\n            content: reviewText // 사용자 리뷰 내용 추가\r\n        };\r\n        setReviews([...reviews, newReview]); // 리뷰 목록에 새 리뷰 추가\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"OrderReview02\">\r\n            {/* <!-- main product detail --> */}\r\n            <div className=\"container\">\r\n                {/* <!-- product detail dt 로 요약 --> */}\r\n\r\n                <table className=\"review\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>번호</th>\r\n                            <th>제목</th>\r\n                            <th>작성자</th>\r\n                            <th>작성일</th>\r\n                            <th>조회</th>\r\n                        </tr>\r\n                        {singleReviewLi}\r\n                        <tr>\r\n                            <th colspan=\"5\">\r\n                                <a onClick={openModal}>상품후기쓰기 </a>\r\n                                <Modal className=\"ModalContent\" isOpen={modalIsOpen} onRequestClose={closeModal}>\r\n                                    <RModal closeModal={closeModal} onReviewTextChange={handleReviewTextChange} />\r\n                                </Modal>\r\n                                <a> 내가쓴글조회하기</a>\r\n                            </th>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default OrderReview02;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Join\\Info.jsx",["360","361"],[],"import './Info.css';\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState, useRef } from 'react';\r\n\r\nconst Info = () => {\r\n\r\n    // 엔터키 누르면 아래로\r\n    const handleKeyDown = (event, nextInputRef) => {\r\n        if (event.key === \"Enter\") {\r\n            event.preventDefault(); // 기본 엔터키 동작 방지\r\n            nextInputRef.current.focus(); // 다음 입력 필드로 포커스 이동\r\n        }\r\n    };\r\n\r\n    // Ref 객체 추가\r\n    const idInputRef = useRef(null); // 아이디 입력 필드의 Ref 객체\r\n    const idckbtnInputRef = useRef(null); // 아이디 중복확인 버튼의 Ref 객체\r\n    const passwordInputRef = useRef(null);\r\n    const pwdckInputRef = useRef(null);\r\n    const postcodeInputRef = useRef(null);\r\n    const postbtnInputRef = useRef(null);\r\n    const addressInputRef = useRef(null);\r\n    const addressdetailInputRef = useRef(null);\r\n    const cell1InputRef = useRef(null);\r\n    const cell2InputRef = useRef(null);\r\n    const emailidInputRef = useRef(null);\r\n    const emailInputRef = useRef(null);\r\n\r\n\r\n\r\n    // 이름\r\n    const [name, setName] = useState(\"\"); // 이름 상태와 변경 함수\r\n    const [nameError, setNameError] = useState(\"\"); // 이름 에러 메세지\r\n\r\n    const handleNameChange = (event) => {\r\n        const newName = event.target.value;\r\n        setName(newName);\r\n\r\n        // 이름 입력시 2자 이상 입력했는지\r\n        if (newName.length < 2) {\r\n            setNameError(\"2자 이상 입력해주세요.\");\r\n        } else {\r\n            setNameError(\"\");\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    // 아이디 -> 중복확인은 아니고 그냥 아이디값 입력잘했는지\r\n    const [id, setId] = useState(\"\");  // 아이디 상태와 변경 함수\r\n    const [idError, setIdError] = useState(\"\"); // 이름 에러 메세지\r\n\r\n    const handleidChange = (event) => {\r\n        const newId = event.target.value;\r\n        setId(newId);\r\n        console.log(newId);\r\n\r\n        // 아이디 입력시 5자~15 입력했는지\r\n        if (newId.length < 5 || newId.length > 15) {\r\n            setIdError(\"아이디는 5~15자 이내이여야 합니다.\");\r\n        } else {\r\n            setIdError(\"\");\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    // 비밀번호\r\n    const [password, setPassword] = useState(\"\"); // 비밀번호 상태와 변경 함수\r\n    const [passwordError, setPasswordError] = useState(\"\"); // 비밀번호 오류메세지\r\n\r\n    const handlePasswordChange = (event) => {\r\n        const newPassword = event.target.value;\r\n        setPassword(newPassword);\r\n\r\n        // 비밀번호 입력값 \r\n        const isValidPassword = newPassword.length >= 5 &&\r\n            newPassword.length <= 15 &&\r\n            /[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\-]/.test(newPassword);\r\n\r\n        if (!isValidPassword) {\r\n            setPasswordError(\"비밀번호는 5~15자 이내이며, 최소 1개의 특수문자를 포함해야 합니다.\");\r\n        } else {\r\n            setPasswordError(\"\");\r\n        }\r\n    };\r\n\r\n    // 비밀번호 확인\r\n    const [pwdck, setPwdck] = useState(\"\");\r\n    const [pwdckError, setPwdckError] = useState(\"\"); // 비밀번호 확인 오류 메세지\r\n\r\n    const handlePwdckChange = (event) => {\r\n        const newPwdck = event.target.value;\r\n        setPwdck(newPwdck);\r\n\r\n        // 비밀번호 확인 입력값 비교\r\n        if (newPwdck !== password) {\r\n            setPwdckError(\"비밀번호가 일치하지 않습니다.\");\r\n        } else {\r\n            setPwdckError(\"\");\r\n        }\r\n    };\r\n\r\n\r\n    // 우편번호 확인\r\n    const [postcode, setPostcode] = useState(\"\");\r\n    const [postcodeError, setPostcodeError] = useState(\"\");\r\n    const handlePostcodeChange = (event) => {\r\n        const newPostcode = event.target.value;\r\n\r\n        // 우편번호 입력값이 숫자와 \"-\"만으로 구성되어 있는지 확인\r\n        if (!/^[0-9-]*$/.test(newPostcode)) {\r\n            setPostcodeError(\"우편번호는 숫자와 기호 '-'만 가능합니다.\");\r\n        }else {\r\n            // 숫자와 \"-\"만으로 구성된 경우에만 우편번호 변경 및 오류 초기화\r\n            setPostcode(newPostcode);\r\n            setPostcodeError(\"\");\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    // 취소 버튼 클릭 시 -> 입력된거 초기화\r\n    const handleCancelClick = () => {\r\n        setName(\"\");\r\n        setId(\"\");\r\n        setPassword(\"\");\r\n        setPwdck(\"\");\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"Info\">\r\n            <div className=\"path\">\r\n                <span>현재 위치</span>\r\n                <ol>\r\n                    <li><Link to=\"/\">홈</Link></li>\r\n                    <li title=\"현재 위치\"> &gt; &nbsp; Join</li>\r\n                </ol>\r\n            </div>\r\n            <div className=\"title\">\r\n                <h2>JOIN</h2>\r\n                <div className=\"txt_01\">회원가입</div>\r\n            </div>\r\n\r\n            <form action=\"/login/info/agree\" name=\"personalInfo\">\r\n                <table className=\"personal_info\">\r\n                    <caption>\r\n                        <h3>회원정보</h3>\r\n                    </caption>\r\n\r\n                    <tr>\r\n                        <th>\r\n                            <label for=\"name\"><span>&#42;</span>이름</label>\r\n                        </th>\r\n                        <td>\r\n                            <input type=\"text\"\r\n                                name=\"name\"\r\n                                minlength=\"2\"\r\n                                maxlength=\"7\"\r\n                                id=\"name\"\r\n                                value={name}\r\n                                onChange={handleNameChange}\r\n                                onKeyDown={(e) => handleKeyDown(e, idInputRef)} // 다음 입력창의 Ref 객체 전달\r\n                                required\r\n                            />\r\n                            {nameError && (\r\n                                <span className=\"input_error\">{nameError}</span>)}\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th>\r\n                            <label for=\"userid\"><span>&#42;</span>아이디</label>\r\n                        </th>\r\n                        <td>\r\n                            <input type=\"text\"\r\n                                name=\"id\"\r\n                                minlength=\"5\"\r\n                                maxlength=\"15\"\r\n                                id=\"userid\"\r\n                                value={id}\r\n                                onChange={handleidChange}\r\n                                ref={idInputRef} // Ref 객체 연결\r\n                                onKeyDown={(e) => handleKeyDown(e, idckbtnInputRef)} // 다음 입력창의 Ref 객체 전달\r\n                                required />\r\n                            <input className=\"inside_btn\"\r\n                                type=\"submit\"\r\n                                name=\"overlap\"\r\n                                value=\"중복확인\"\r\n                                ref={idckbtnInputRef} // Ref 객체 연결\r\n                                onKeyDown={(e) => handleKeyDown(e, passwordInputRef)}\r\n                            />\r\n                            {idError && (\r\n                                <span className=\"input_error\">{idError}</span>)}\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th>\r\n                            <label for=\"pw\"><span>&#42;</span>비밀번호</label>\r\n                        </th>\r\n                        <td>\r\n                            <input type=\"password\"\r\n                                name=\"pwd\"\r\n                                minlength=\"5\"\r\n                                maxlength=\"15\"\r\n                                id=\"pw\"\r\n                                value={password}\r\n                                onChange={handlePasswordChange}\r\n                                ref={passwordInputRef} // Ref 객체 연결\r\n                                onKeyDown={(e) => handleKeyDown(e, pwdckInputRef)} // 다음 입력창의 Ref 객체 전달\r\n                                required\r\n                            />\r\n                            {passwordError && (\r\n                                <span className=\"input_error\">{passwordError}</span>)}\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th>\r\n                            <label for=\"pwdcheck\"><span>&#42;</span>비밀번호 확인</label>\r\n                        </th>\r\n                        <td>\r\n                            <input type=\"password\"\r\n                                name=\"pwdcheck\"\r\n                                maxlength=\"15\"\r\n                                id=\"pwdcheck\"\r\n                                value={pwdck}\r\n                                onChange={handlePwdckChange}\r\n                                ref={pwdckInputRef} // Ref 객체 연결\r\n                                onKeyDown={(e) => handleKeyDown(e, postcodeInputRef)} // 다음 입력창의 Ref 객체 전달\r\n                                required />\r\n                            {pwdckError && (\r\n                                <span className=\"input_error\">{pwdckError}</span>)}\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th>\r\n                            <label for=\"address\"><span>&#42;</span>주소</label>\r\n                        </th>\r\n                        <td>\r\n                            <div className=\"input_address\">\r\n                                <input type=\"text\"\r\n                                    name=\"post_code\"\r\n                                    maxlength=\"7\"\r\n                                    placeholder=\"우편번호입력\"\r\n                                    id=\"address\"\r\n                                    value={postcode}\r\n                                    onChange={handlePostcodeChange}\r\n                                    ref={postcodeInputRef} // Ref 객체 연결\r\n                                    onKeyDown={(e) => handleKeyDown(e, postbtnInputRef)}\r\n                                    required/>\r\n\r\n                                <form action=\"https://www.epost.kr/search.RetrieveIntegrationNewZipCdList.comm\"\r\n                                    target=\"_blank\">\r\n                                \r\n                                    <input\r\n                                        className=\"inside_btn\"\r\n                                        type=\"submit\"\r\n                                        name=\"find_postcode\"\r\n                                        value=\"우편번호찾기\"\r\n                                        ref={postbtnInputRef}\r\n                                        onKeyDown={(e) => handleKeyDown(e, addressInputRef)}/>\r\n                                        {postcodeError && (\r\n                                            <span className=\"input_error\">{postcodeError}</span>\r\n                                        )}\r\n                                    \r\n                                    \r\n                                </form>\r\n                            </div>\r\n                            <div>\r\n                                <input type=\"text\"\r\n                                    name=\"address\"\r\n                                    // value={address}\r\n                                    ref={addressInputRef} // Ref 객체 연결\r\n                                    onKeyDown={(e) => handleKeyDown(e, addressdetailInputRef)}\r\n                                    required />\r\n                                <input type=\"text\"\r\n                                    name=\"address_detail\"\r\n                                    placeholder=\"상세주소\"\r\n                                    ref={addressdetailInputRef} // Ref 객체 연결\r\n                                    onKeyDown={(e) => handleKeyDown(e, cell1InputRef)} />\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th>\r\n                            <label for=\"cellphone\"><span>&#42;</span>휴대폰 번호</label>\r\n                        </th>\r\n                        <td>\r\n                            <div>\r\n                                <input type=\"tel\"\r\n                                    name=\"first_phone_number\"\r\n                                    value=\"010\"\r\n                                    size=\"1\"\r\n                                    readonly />\r\n                                &ndash;\r\n\r\n                                <input type=\"tel\"\r\n                                    name=\"second_phone_number\"\r\n                                    minlength=\"3\"\r\n                                    maxlength=\"4\"\r\n                                    size=\"1\"\r\n                                    id=\"cellphone\"\r\n                                    ref={cell1InputRef} // Ref 객체 연결\r\n                                    onKeyDown={(e) => handleKeyDown(e, cell2InputRef)}\r\n                                    required />\r\n                                &ndash;\r\n\r\n                                <input type=\"tel\"\r\n                                    name=\"last_phone_number\"\r\n                                    minlength=\"4\"\r\n                                    maxlength=\"4\"\r\n                                    size=\"1\"\r\n                                    ref={cell2InputRef} // Ref 객체 연결\r\n                                    onKeyDown={(e) => handleKeyDown(e, emailidInputRef)}\r\n                                    required />\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>\r\n                            <label for=\"emailid\">이메일</label>\r\n                        </th>\r\n                        <td>\r\n                            <input type=\"text\"\r\n                                name=\"emailid\"\r\n                                id=\"emailid\"\r\n                                ref={emailidInputRef} // Ref 객체 연결\r\n                                onKeyDown={(e) => handleKeyDown(e, emailInputRef)} />\r\n                            @\r\n                            <input type=\"text\"\r\n                                name=\"mail\"\r\n                                placeholder=\"직접 입력\"\r\n                                ref={emailInputRef} />\r\n                            <select name=\"email_domain\">\r\n                                <option value=\"self\">선택</option>\r\n                                <option value=\"naver\">naver.com</option>\r\n                                <option value=\"daum\">hanmail.net</option>\r\n                                <option value=\"gmail\">gmail.com</option>\r\n                            </select>\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <th>마케팅 수신 동의</th>\r\n                        <td>\r\n                            <div className=\"agree_check\">\r\n                                <input type=\"radio\" name=\"agree\" id=\"agree_1\" />\r\n                                <label for=\"agree_1\">이메일</label>\r\n                                <input type=\"radio\" name=\"agree\" id=\"agree_2\" />\r\n                                <label for=\"agree_2\">SMS</label>\r\n                                <input type=\"radio\" name=\"agree\" id=\"agree_3\" checked /><label for=\"agree_3\">수신받지않음</label>\r\n                                <span>마케팅 수신에 동의하실 경우, Ojoa의 소식을 빠르게 받아보실 수 있습니다.</span>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n\r\n                </table>\r\n\r\n                <div className=\"input_warn\">* 는 필수 입력사항입니다.</div>\r\n\r\n\r\n                <div className=\"join_btn\">\r\n                    <input className=\"out_btn2\" type=\"reset\" name=\"cancel\" value=\"취소하기\" onClick={handleCancelClick} />\r\n                    <Link to=\"/login/info/agree\">\r\n                        <input className=\"out_btn3\" type=\"submit\" name=\"finish\" value=\"작성완료\" />\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default Info;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Main\\MiniSection.jsx",["362","363"],[],"import '../../pages/Main/Main.css';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport MiniItems from './MiniItems';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n// 미니섹션에 있는 아이템들\r\n\r\nconst mockMinipro = [\r\n    {\r\n        id: 0,\r\n        imgNo: 0,\r\n        blacklabel: \"2022 F/W BEST\",\r\n        mini_1: \"[Ojoa 단독입점]\",\r\n        mini_2: \"2022 SEASON BEST\",\r\n        proname: \"길쭉한 소파\",\r\n        proprice: \"113,000원\",\r\n        sale: \"5%\",\r\n        link: \"203\"\r\n    },\r\n\r\n    {\r\n        id: 1,\r\n        imgNo: 1,\r\n        blacklabel: \"Ojoa's BEST ITEM\",\r\n        mini_1: \"[ACE CHAIR] 입점상품\",\r\n        mini_2: \"BRANDNEW ITEM\",\r\n        proname: \"원희 의자\",\r\n        proprice: \"170,000원\",\r\n        sale: \"17%\",\r\n        link: \"15\"\r\n    },\r\n\r\n    {\r\n        id: 2,\r\n        imgNo: 2,\r\n        blacklabel: \"브랜드 기획전\",\r\n        mini_1: \"[BROWN TOM] X Ojoa\",\r\n        mini_2: \"Sepcial Colaboration\",\r\n        proname: \"조금 큰 나무 침대\",\r\n        proprice: \"385,000원\",\r\n        sale: \"7%\",\r\n        link: \"101\"\r\n    },\r\n\r\n\r\n    {\r\n        id: 3,\r\n        imgNo: 3,\r\n        blacklabel: \"SPECIAL ITEM\",\r\n        mini_1: \"[ROYAL FAMILY]\",\r\n        mini_2: \"ENGLAND DESIGN BEST\",\r\n        proname: \"심플 옷장\",\r\n        proprice: \"209,000원\",\r\n        sale: \"22%\",\r\n        link: \"401\"\r\n    },\r\n\r\n    {\r\n        id: 4,\r\n        imgNo: 4,\r\n        blacklabel: \"해외 직배송\",\r\n        mini_1: \"[L.IKEA X Ojoa] 해외 직구\",\r\n        mini_2: \"SUMMER COLLECTION\",\r\n        proname: \"한놈 조명\",\r\n        proprice: \"30,000원\",\r\n        sale: \"10%\",\r\n        link: \"501\"\r\n    },\r\n\r\n    {\r\n        id: 5,\r\n        imgNo: 5,\r\n        blacklabel: \"CLASSIC ITEM\",\r\n        mini_1: \"[BLACK LABEL]\",\r\n        mini_2: \"MODERN BAR ITEM\",\r\n        proname: \"성은 의자\",\r\n        proprice: \"139,000원\",\r\n        sale: \"5%\",\r\n        link: \"16\"\r\n    }\r\n\r\n] //mockMinipro\r\n\r\n\r\n\r\nconst MiniSection = () => {\r\n    // const handleLinkClick = () => {\r\n    //     alert('해당 페이지는 현재 준비중 입니다.');\r\n    // };\r\n// onClick={handleLinkClick}\r\n\r\n    const miniLi = mockMinipro.map((content) => {\r\n        // ... (ProductListItem 렌더링 코드)\r\n\r\n        return (\r\n            <div className=\"drgn\">\r\n            {/* <Link to={`/ProductDetail/${content.link}`} >   */}\r\n                <li key={content.id}><MiniItems imgNo={content.imgNo} proname={content.proname}\r\n                    blacklabel={content.blacklabel} mini_1={content.mini_1} mini_2={content.mini_2}\r\n                    proprice={content.proprice} sale={content.sale}\r\n                    castle={`/ProductDetail/${content.link}`}/>\r\n                    </li>\r\n            {/* </Link> */}\r\n              </div>\r\n        );\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        // main_col -> MiniSection\r\n        <div className=\"MiniSection\">\r\n            {miniLi}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default MiniSection;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductList\\PLFilter.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\components\\Modal\\Modal.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\components\\Modal\\ModalBasic.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Cart\\CartHeader.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Cart\\CartList.jsx",["364","365","366"],[],"import '../../pages/Cart/Cart.css';\r\nimport React, { useState, useEffect } from \"react\";\r\n// import { NavLink, Routes, Route, useParams, Link } from \"react-router-dom\"\r\n\r\n\r\n\r\nconst CartList = ({ cart, onDecrease, onIncrease, handleRemove, convertPrice, selectedItems, setSelectedItems }) => {\r\n\r\n    //handleCheckboxChange: 아이템의 체크박스 선택 상태를 관리하는 함수로, \r\n    //선택한 아이템을 selectedItems에 추가 또는 제거\r\n    const handleCheckboxChange = (itemId) => {\r\n        setSelectedItems(prevSelectedItems => {\r\n            if (prevSelectedItems.includes(itemId)) {\r\n                // 이미 선택되었던 아이템을 선택 해제\r\n                return prevSelectedItems.filter(id => id !== itemId);\r\n            } else {\r\n                // 새로운 아이템을 선택\r\n                return [...prevSelectedItems, itemId];\r\n            }\r\n        });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"CartListAll\">\r\n            {/* 장바구니에 있는 각 상품을 매핑하며 표시 */}\r\n            {cart.map((item) => (\r\n                <div className=\"CartList\">\r\n                    <table className=\"list_detail\">\r\n                        <tbody>\r\n                            <tr key={item.id}>\r\n                                <td>\r\n\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={selectedItems.includes(item.id)}\r\n                                        onChange={() => handleCheckboxChange(item.id)}\r\n                                    />\r\n\r\n                                </td>\r\n\r\n                                <td><img className=\"cart_img\" src={`/thumbs/${item.imgNo}_1.jpg`} alt={`Product ${item.productName}`} /></td>\r\n                                <td>\r\n                                    <div className=\"cart_mininame\">[{item.productInfo}]</div>\r\n                                    <td><a className=\"cart_mainname\" href=\"#\">{item.productName}</a></td>\r\n                                </td>\r\n                                <td className=\"cart_saleprice\">\r\n                                    <sup>{item.productPromotion}&#37;&#8595;</sup>\r\n                                    <div className=\"cart_li_price\">{convertPrice(item.productPriceFormatted)}원</div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"cart_product_count\">\r\n                                        <img\r\n                                            className=\"minus\"\r\n                                            src={\"../images/newminus.png\"}\r\n                                            alt=\"minus\"\r\n                                            onClick={() => onDecrease(item.id)}\r\n                                        />\r\n                                        <div className=\"count\">\r\n                                            <span>{item.quantity}</span>\r\n                                        </div>\r\n                                        <img\r\n                                            className=\"plus\"\r\n                                            src={\"../images/newplus.png\"}\r\n                                            alt=\"plus\"\r\n                                            onClick={() => onIncrease(item.id)}\r\n                                        />\r\n                                    </div>\r\n                                </td>\r\n                                <td>무료배송</td>\r\n                                <td className=\"final_price\">\r\n                                    {convertPrice((item.productPriceFormatted) * item.quantity)}원\r\n                                    <img\r\n                                        src={\"/images/cancel.png\"}\r\n                                        alt=\"delete\"\r\n                                        onClick={() => handleRemove(item.id)}\r\n                                        className=\"product_remove\"\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartList;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Cart\\CartTotal.jsx",["367"],[],"import '../../pages/Cart/Cart.css';\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst CartTotal = ({ cart, convertPrice, selectedItems, onCheckout }) => {\r\n\r\n\r\n    // 선택된 아이템의 총 가격 상태\r\n    const [selectedTotal, setSelectedTotal] = useState(0);\r\n\r\n\r\n\r\n    //calculateTotalPrice: 선택된 아이템의 가격과 수량을 계산해서 \r\n    //                      총 가격을 계산하는 함수\r\n    const calculateTotalPrice = () => {\r\n        return selectedItems.reduce((total, itemId) => {\r\n            const selectedItem = cart.find(item => item.id === itemId);\r\n            if (selectedItem) {\r\n                return total + selectedItem.productPriceFormatted * selectedItem.quantity;\r\n            }\r\n            return total;\r\n        }, 0);\r\n    };\r\n\r\n\r\n\r\n    //useEffect를 사용하여 selectedItems나 cart가 변경될 때마다 총 가격을 업데이트\r\n    useEffect(() => {\r\n        const total = calculateTotalPrice();\r\n        setSelectedTotal(total); //selectedTotal: 선택된 아이템들의 총 가격을 저장하는 상태\r\n    }, [selectedItems, cart]);\r\n\r\n\r\n    return (\r\n        <div className=\"CartTotal\">\r\n\r\n            <div className=\"PriceBox\">\r\n\r\n                <div className=\"total_price\">\r\n                    <p className=\"cart_product_total_price\">상품금액</p>\r\n                    <p className=\"cart_product_price\">{convertPrice(selectedTotal)}원</p>\r\n                </div>\r\n\r\n\r\n                <div className=\"pay_plus\">\r\n                    <img src={\"../images/plus.png\"} alt=\"plus\" />\r\n                </div>\r\n\r\n                <div className=\"delivery\">\r\n                    <p className=\"cart_product_delivery\">배송비</p>\r\n                    <p className=\"cart_product_delivery_price\">무료</p>\r\n                </div>\r\n\r\n                <div className=\"pay_plus\">\r\n                    <img src={\"../images/equal.png\"} alt=\"equal\" />\r\n                </div>\r\n\r\n                <div className=\"payment\">\r\n                    <p className=\"cart_prouct_payment\">결제 금액</p>\r\n                    {/* <p className=\"cart_prouct_payment_price\">{convertPrice(totalPayment)}원</p> */}\r\n                    <p className=\"cart_prouct_payment_price\">{convertPrice(selectedTotal)}원</p> {/* 선택된 아이템 가격 합을 추가 */}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"cart_info\">\r\n                <ul className=\"cart_info_1\">\r\n                    <li>Ojoa의 모든 상품은 100,000원 이상 구매시 무료배송 입니다.</li>\r\n                    <li>결제 후 주소, 옵션 등 정보가 변경된 경우 교환이 불가하오니 신중히 구매 부탁드립니다.</li>\r\n                    <li>장바구니 상품은 최대 30일간 저장됩니다.</li>\r\n                </ul>\r\n            </div>\r\n\r\n            {/* <-------------  여기부터 버튼 시작   -----------------> */}\r\n            <div className=\"final_btns\">\r\n                <div className=\"button\">\r\n                    <p className=\"btnText\">CANCEL</p>\r\n                    <div className=\"btnTwo\">\r\n                        <p className=\"btnText2\">X</p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"button\" onClick={onCheckout}>\r\n                    <p className=\"btnText\">PAY NOW</p>\r\n                    <div className=\"btnTwo\">\r\n                        <p className=\"btnText2\">GO!</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CartTotal;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Main\\Main.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Store\\Store.jsx",["368"],[],"import React, { useEffect } from 'react';\r\nimport '../../pages/Store/Store.css';\r\nimport Stores from '../../pages/Store/Stores';\r\n\r\nfunction Store() {\r\n\r\n    return (\r\n        <div className=\"Store\">\r\n            <Stores />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Store;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\NotFound\\NotFound.jsx",["369"],[],"import '../../pages/NotFound/NotFound.css'\r\nimport React, { useEffect } from 'react';\r\n\r\nconst NotFound = () => {\r\n\r\n    return (\r\n        <div className='NotFound'>\r\n            <div className='error'>\r\n                <h1>404 Error</h1>\r\n                <h4>Ooops, page not found</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\MyPage.jsx",["370"],[],"import React, { useEffect } from 'react';\r\nimport '../../pages/MyPage/MyPage.css';\r\nimport ThumbNail from '../../pages/MyPage/ThumbNail';\r\nimport AsyncBankBook from '../../pages/MyPage/AsyncBankBook';\r\nimport OrderState from '../../pages/MyPage/OrderState';\r\nimport MyshopMain from '../../pages/MyPage/MyshopMain';\r\n\r\nfunction MyPage() {\r\n\r\n    return (\r\n        <div className=\"MyPage\">\r\n            <ThumbNail />\r\n            <AsyncBankBook />\r\n            <OrderState />\r\n            <MyshopMain />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPage;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Main\\FlipRoom.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Main\\SlideImg.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Store\\Stores.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\MyshopMain.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Join\\Popup.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductDetail\\DetailInfo01.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductDetail\\ProdQna03.jsx",["371","372"],[],"import React, { useState } from \"react\";\r\nimport \"./ProductDetail.css\";\r\nimport Modal from 'react-modal';\r\nimport QModal from './Modal/QModal';\r\n\r\nfunction ProdQna03() {\r\n    // // 모달창 띄우기\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n    const openModal = () => setModalIsOpen(true);\r\n    const closeModal = () => setModalIsOpen(false);\r\n\r\n    return (\r\n        <div className=\"ProdQna03\">\r\n            {/* <!-- main product detail --> */}\r\n            <div className=\"container\">\r\n                {/* <!-- product detail dt 로 요약 --> */}\r\n                <table className=\"pd_qna\">\r\n\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>게시물이 없습니다</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>\r\n                                <a onClick={openModal}>상품문의하기 </a>\r\n                                <Modal className=\"ModalContent\" isOpen={modalIsOpen} onRequestClose={closeModal}>\r\n                                    <QModal closeModal={closeModal} />\r\n                                </Modal>\r\n                                <a>모두보기</a>\r\n                            </th>\r\n                        </tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProdQna03;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\components\\Pagination\\Pagination.jsx",["373","374","375","376","377","378","379","380","381","382","383","384","385"],[],"import React from \"react\";\r\nimport \"./Pagination.css\";\r\n\r\nfunction Pagination() {\r\n    return (\r\n        <div className=\"Pagination\">\r\n            {/* <!-- 페이지네이션 --> */}\r\n            <div className=\"pl_page\">\r\n                <ul className=\"pl_pagination pl_modal\">\r\n                    <li><a href=\"#\" className=\"pl_first\">처음 페이지</a></li>\r\n                    <li><a href=\"#\" className=\"pl_arrow pl_left\">◀</a></li>\r\n                    <li><a href=\"#\" className=\"pl_active pl_num\">1</a></li>\r\n                    <li><a href=\"#\" className=\"pl_num\">2</a></li>\r\n                    <li><a href=\"#\" className=\"pl_num\">3</a></li>\r\n                    <li><a href=\"#\" className=\"pl_num\">4</a></li>\r\n                    <li><a href=\"#\" className=\"pl_num\">5</a></li>\r\n                    <li><a href=\"#\" className=\"pl_num\">6</a></li>\r\n                    <li><a href=\"#\" className=\"pl_num\">7</a></li>\r\n                    <li><a href=\"#\" className=\"pl_num\">8</a></li>\r\n                    <li><a href=\"#\" className=\"pl_num\">9</a></li>\r\n                    <li><a href=\"#\" className=\"pl_arrow pl_right\">▶</a></li>\r\n                    <li><a href=\"#\" className=\"pl_last\">끝 페이지</a></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Pagination;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductDetail\\PurGuide04.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Qna\\Qna.jsx",["386","387"],[],"// import React from 'react';\r\nimport { ModalProvider } from './QnaModal/ModalContext';\r\nimport './Qna.css';\r\nimport QnaPage from './QnaPage';\r\nimport QnaFilter from './QnaFilter';\r\nimport QnaListItem from './QnaListItem';\r\nimport QnaTitleList from './QnaTitleList';\r\nimport Modal from 'react-modal';\r\nimport QnaWriteBtn from './QnaWriteBtn';\r\nimport React, { useMemo, useCallback, useReducer, useRef, useEffect, useState } from \"react\";\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\n\r\n\r\n\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"INIT\": {\r\n            return action.dataList;\r\n        }\r\n        case \"Create\": {\r\n            const newState = [action.newItem, ...state];\r\n            localStorage.setItem(\"todo\", JSON.stringify(newState));\r\n            return newState;\r\n        }\r\n        default: return state;\r\n    }; //switch\r\n} //reducer\r\n\r\n// 1) Context 생성\r\n// => 불필요한 랜더링을 방지하여 최적화 하기위해 \r\n//    Context 를 역할별로 분리한다.\r\nexport const TodoStateContext = React.createContext();\r\n// => todo 의 변경에 영향받는 컴포넌트를 위한 Context \r\nexport const TodoDispatchContext = React.createContext();\r\n// => dispath 함수 onCreate, onUpdate, onDelete 의 변경에\r\n//    영향받는 컴포넌트를 위한 Context\r\n\r\n\r\n//=========================================================\r\nfunction Qna() {\r\n\r\n\r\n    // ** Local Storage 적용 1\r\n    // => LocalStorage 의 Data 읽어, todo 초기화 하기  \r\n    const [todo, dispatch] = useReducer(reducer, []);\r\n\r\n    const idRef = useRef(0);\r\n    const [isDataLoaded, setIsDataLoaded] = useState(false);\r\n    // ** localData Loading\r\n    // => Mount시 1회 실행 하도록 useEffect 에 빈 배열 전달\r\n    useEffect(() => {\r\n        const rawData = localStorage.getItem(\"todo\");\r\n        // => LocalStorage 의 Data 존재 확인\r\n        if (!rawData) {\r\n            setIsDataLoaded(true);\r\n            return;\r\n        }\r\n        const localData = JSON.parse(rawData);\r\n        if (localData.length === 0) {\r\n            setIsDataLoaded(true);\r\n            return;\r\n        }\r\n        // => localData 가 존재하면\r\n        //  -> create시 id값 생성을 위한 idRef 값 할당\r\n        //  -> Loading 된 Data를 State 변수 todo에 담기위해 dispatch 호출\r\n        //  -> setIsDataLoaded(true) : Loading 완료됨 표시 \r\n        idRef.current = localData.length;\r\n        dispatch({ type: \"INIT\", dataList: localData });\r\n        setIsDataLoaded(true);\r\n    }, []); //useEffect\r\n\r\n    // ** 일정추가 (Create) 함수 생성\r\n    const onCreate = (title) => {\r\n        dispatch({\r\n            type: \"Create\",\r\n            newItem: {\r\n                id: idRef.current,\r\n                title: title,\r\n            }\r\n        }); //dispatch\r\n        idRef.current += 1;\r\n    }; //onCreate ( useCallback 을 적용하지않음 )\r\n\r\n    // ** TodoDispatchContext.Provider value 속성값\r\n    //    onCreate, onUpdate, onDelete 함수 최적화\r\n    // => 처음 한번만 (TodoList가 처음 리랜더링 될때) 실행되도록 메모이제이션 \r\n    const memoizedDispatches = useMemo(() => {\r\n        return { onCreate };\r\n    }, []);\r\n    //=========================================================\r\n\r\n\r\n\r\n\r\n    // 게시판 필터\r\n    const [filters, setFilters] = useState({ category: \"\", date: \"\", key: \"\", query: \"\" });\r\n\r\n    const qnaList = [\r\n        {\r\n            num: '공지',\r\n            imgNo: '-',\r\n            itemInfo: '-',\r\n            category: '-',\r\n            title: '리뷰작성 포인트 적립안내',\r\n            notification: '첫번째 공지 입니다. 아 리액트 빡치네.. 서터레스...',\r\n            titleIcon: '[16]',\r\n            writer: 'ojoa',\r\n            date: '2023.03.23'\r\n        },\r\n        {\r\n            num: '공지',\r\n            imgNo: '-',\r\n            itemInfo: '-',\r\n            category: '-',\r\n            title: 'ojoa 온라인몰 배송관련 안내',\r\n            notification: '새로운 공지 입니다. 때려칠까',\r\n            titleIcon: '[10]',\r\n            writer: 'ojoa',\r\n            date: '2023.07.23'\r\n        },\r\n        {\r\n            num: 1,\r\n            imgNo: 5,\r\n            itemInfo: '[이끼 의자]',\r\n            category: '상품문의',\r\n            title: '물 줘도 되나요?',\r\n            notification: '제가 살아 있는 생물만 구매하는 주의라서요. 신선 배송 되겠죠? 서울인데 새벽배송 가능하죠?',\r\n            titleIcon: '[1]',\r\n            writer: '오원희',\r\n            date: '2023.08.18'\r\n        },\r\n        {\r\n            num: 2,\r\n            imgNo: 13,\r\n            itemInfo: '[철의 왕좌]',\r\n            category: '상품문의',\r\n            title: '가격이... 혹시 정품 인가요?',\r\n            notification: '왕좌의 게임에 나오는 철의 왕좌 같은데요... 정품 인가요? 예전에 중국산을 속아서 산적이 있어서요...',\r\n            titleIcon: '[1]',\r\n            writer: '어성은',\r\n            date: '2023.08.19'\r\n        }, {\r\n            num: 3,\r\n            imgNo: 14,\r\n            itemInfo: '[희상 의자]',\r\n            category: '주문/결제',\r\n            title: '주문하려고 하는데 240개월 할부가 되나요?',\r\n            notification: '카드사 별로 얼마나 할부되는지 궁금해요.',\r\n            titleIcon: '[1]',\r\n            writer: '유희상',\r\n            date: '2023.08.05'\r\n        },\r\n        {\r\n            num: 4,\r\n            imgNo: 15,\r\n            itemInfo: '[원희 의자]',\r\n            category: '상품문의',\r\n            title: '손가락은 꺾이나요?',\r\n            notification: '손가락이 꺾여서 팔받침으로 사용할 수 있는 건가요?',\r\n            titleIcon: '[1]',\r\n            writer: '이진기',\r\n            date: '2023.07.05'\r\n        },\r\n        {\r\n            num: 5,\r\n            imgNo: 16,\r\n            itemInfo: '[성은 의자]',\r\n            category: '배송문의',\r\n            title: '먹을 수 있나요?',\r\n            notification: '아무리 봐도 바게트 같은.....? 배송은 언제쯤 가능한가요?',\r\n            titleIcon: '[1]',\r\n            writer: '오원희',\r\n            date: '2023.06.19'\r\n        },\r\n        {\r\n            num: 6,\r\n            imgNo: 12,\r\n            itemInfo: '[푸바오 의자]',\r\n            category: '상품문의',\r\n            title: '손가락은 꺾이나요?',\r\n            notification: '손가락이 꺾여서 팔받침으로 사용할 수 있는 건가요?',\r\n            titleIcon: '[1]',\r\n            writer: '그린컴',\r\n            date: '2023.05.18'\r\n        }\r\n\r\n    ]; // qnaList\r\n\r\n    return (\r\n        <ModalProvider>\r\n            <div className=\"Qna\">\r\n                <TodoStateContext.Provider value={todo}>\r\n                    <TodoDispatchContext.Provider value={memoizedDispatches}>\r\n                        {/* <TodoDispatchContext.Provider value={{onCreate, onUpdate, onDelete}}>  \r\n            => cONTEXT 분리 했어도 최적화 적용 되지 않음  */}\r\n                        <QnaPage />\r\n                        <QnaFilter setFilters={setFilters} />\r\n                        <table className=\"qna_ListItem_container\">\r\n                            <QnaTitleList />\r\n                            <QnaListItem qnaList={qnaList} filters={filters} />\r\n                        </table>\r\n                        <QnaWriteBtn />\r\n                        <Pagination />\r\n                    </TodoDispatchContext.Provider>\r\n                </TodoStateContext.Provider>\r\n            </div>\r\n        </ModalProvider>\r\n    );\r\n}\r\n\r\nexport default Qna;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Qna\\QnaModal\\ModalContext.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Qna\\QnaModal\\QnaModal.jsx",["388","389","390","391","392","393","394"],[],"import React from \"react\";\r\nimport { useState, useRef, useContext, useEffect } from \"react\";\r\nimport mockList from \"../../../data/ItemsData\";\r\nimport { TodoDispatchContext } from \"../Qna\";\r\nimport { useModal } from \"../QnaModal/ModalContext\";\r\nimport \"./QnaModal.css\";\r\n\r\nfunction QnaModal({ closeModal }) {\r\n\r\n    const [content, setContent] = useState(\"\");\r\n    // => new 일정 처리할  onChangeContent 이벤트 핸들러 \r\n    const onChangeContent = (e) => {\r\n        setContent(e.target.value);\r\n    }; //onChangeContent\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        closeModal(false);\r\n    };\r\n\r\n\r\n    // const onKeyDown = (e) => {\r\n    //     if (e.keyCode === 13) { onSubmit(); }\r\n    // }; //onKeyDown\r\n\r\n\r\n    return (\r\n\r\n        <div id=\"QnaModal_Background\">\r\n            <div className=\"qnaModal_container2\">\r\n                <img\r\n                    onClick={() => {\r\n                        closeModal(); // 모달 닫기\r\n                    }}\r\n                    className=\"qnaModal_btn_close\"\r\n                    src=\"../images/search_X.png\"\r\n                    alt=\"search_x\"\r\n                />\r\n            </div>\r\n\r\n\r\n\r\n            {/* 내부 글쓰기 */}\r\n            <div className=\"path\">\r\n                <div>\r\n                    <div className='qna_writeArea'>\r\n                        <h2>Q & A</h2>\r\n                    </div>\r\n\r\n\r\n                    <form className=\"qna_write_info\" action=\"\" method=\"post\">\r\n                        <table className=\"qna_board_table\">\r\n                            <caption className=\"qna_writename\">자유게시판 글쓰기</caption>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th scope=\"row\"><label htmlFor=\"qna_bID\">작성자</label></th>\r\n                                    <td className=\"qna_writeid\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"bID\"\r\n                                            id=\"qna_bID\"\r\n                                            onChange={onChangeContent}\r\n                                            placeholder=\"작성자명을 입력하세요.\" />\r\n                                    </td>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                    <th scope=\"row\"><label htmlFor=\"board_category1\">구  분</label></th>\r\n                                    <td className=\"qna_writetitle\">\r\n                                        <select name=\"board_category\" id=\"board_category1\">\r\n                                            <option value=\"1\">전체</option>\r\n                                            <option value=\"2\">상품문의</option>\r\n                                            <option value=\"3\">배송문의</option>\r\n                                            <option value=\"4\">주문/결제</option>\r\n                                            <option value=\"5\">취소문의</option>\r\n                                            <option value=\"6\">반품/교환</option>\r\n                                            <option value=\"7\">환불문의</option>\r\n                                            <option value=\"8\">재입고문의</option>\r\n                                            <option value=\"9\">기타문의</option>\r\n                                            <option value=\"10\"></option>\r\n                                        </select>\r\n                                        <select name=\"board_category\" id=\"board_category2\">\r\n                                            <option>제품목록</option>\r\n                                            {mockList.map((item) => (\r\n                                                <React.Fragment key={item.id}>\r\n                                                    <option value={item.imgNo}>{item.productName}</option>\r\n                                                </React.Fragment>\r\n                                            ))}\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th scope=\"row\"><label htmlFor=\"qna_bTitle\">제  목</label></th>\r\n                                    <td className=\"qna_writetitle\">\r\n                                        {/*<input type=\"text\" name=\"bTitle\" id=\"qna_bTitle\" ref={inputRef} value={content} onChange={onChangeContent} placeholder=\"제목을 입력하세요.\" />*/}\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"bTitle\"\r\n                                            id=\"qna_bTitle\"\r\n                                            placeholder=\"제목을 입력하세요.\" />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th scope=\"row\"><label htmlFor=\"qna_bContent\">내  용</label></th>\r\n                                    <td className=\"qna_write_content\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"bContent\"\r\n                                            id=\"qna_bContent\"\r\n                                            placeholder=\"내용을 입력하세요.\" />\r\n                                    </td>\r\n                                </tr>\r\n                                {/* <tr>\r\n                                    <th scope=\"row\"><label htmlFor=\"qna_bPassword\">비밀번호</label></th>\r\n                                    <td className=\"qna_writepassword\"><input type=\"text\" name=\"bPassword\" id=\"qna_bPassword\" /></td>\r\n                                </tr> */}\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"qna_btnSet\">\r\n                            <a\r\n                                type=\"button\"\r\n                                onClick={onSubmit}\r\n                                className=\"qna_writesubmit_btn\">\r\n                                등록하기</a>\r\n                        </div>\r\n                        <div className=\"qna_btnSet_cancle\">\r\n                            <buttoen\r\n                                type=\"button\"\r\n                                onClick={() => { closeModal(false); }}\r\n                                className=\"qna_writeback_btn\">\r\n                                취소하기\r\n                            </buttoen>\r\n                        </div>\r\n                    </form >\r\n                </div>\r\n            </div >\r\n        </div > //QnaModal_Background\r\n    );\r\n}\r\n\r\nexport default QnaModal;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Qna\\QnaWriteBtn.jsx",["395","396","397"],[],"import React, { useCallback, useState, useRef } from \"react\";\r\nimport \"../Qna/Qna.css\";\r\nimport Modal from 'react-modal';\r\nimport QnaModal from './QnaModal/QnaModal';\r\n\r\nconst QnaWriteBtn = () => {\r\n\r\n    // // 모달창 띄우기\r\n    const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n    const openModal = () => setModalIsOpen(true);\r\n    const closeModal = () => setModalIsOpen(false);\r\n\r\n    return (\r\n\r\n        <div className=\"qna_write_btn\">\r\n            <a onClick={openModal}>글쓰기</a>\r\n            <Modal className=\"ModalContent\" isOpen={modalIsOpen} onRequestClose={closeModal}>\r\n                <QnaModal closeModal={closeModal} />\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QnaWriteBtn;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Qna\\QnaListItem.jsx",["398","399","400","401","402","403","404","405","406","407","408"],[],"import './Qna.css';\r\nimport React, { useState } from \"react\";\r\n\r\n\r\n// 배열 속성 writer 입력시 성만 따오기\r\nconst lastName = (fullName) => {\r\n    if (fullName.length > 0) {\r\n        return fullName.charAt(0);\r\n    };\r\n    return;\r\n};\r\n\r\nfunction QnaListItem({ qnaList, filters }) {\r\n    const [expandedId, setExpandedId] = useState(null);\r\n\r\n    const handleTitleClick = (id) => {\r\n        if (expandedId === id) {\r\n            setExpandedId(null);\r\n        } else {\r\n            setExpandedId(id);\r\n        }\r\n    };\r\n\r\n    // 내용 필터링\r\n    qnaList = qnaList.filter((item) => {\r\n        if (filters.category && item.category != filters.category)\r\n            return false;\r\n\r\n        //모든기간 필터\r\n        if (filters.date) {\r\n            const date = new Date(item.date);\r\n            const diff_days = ((new Date()) - date) / 1000 / 60 / 60 / 24;\r\n            if (filters.date == \"week\" && diff_days > 7)\r\n                return false;\r\n            else if (filters.date == \"month\" && diff_days > 30)\r\n                return false;\r\n            else if (filters.date == \"month3\" && diff_days > 90)\r\n                return false;\r\n        }\r\n\r\n        //제목 필터\r\n        if (filters.key && filters.query) {\r\n            if (filters.key == \"subject\" && !item.title.includes(filters.query))\r\n                return false;\r\n            else if (filters.key == \"content\" && !item.notification.includes(filters.query))\r\n                return false;\r\n            else if (filters.key == \"writer_name\" && !item.writer.includes(filters.query))\r\n                return false;\r\n            else if (filters.key == \"product\" && !item.itemInfo.includes(filters.query))\r\n                return false;\r\n        }\r\n\r\n        return true;\r\n    });\r\n\r\n    return (\r\n        <tbody className='qna_ListItem_container'>\r\n            {qnaList.map((item, i) => (\r\n                <React.Fragment key={i}>\r\n                    {\r\n                        (item.num == \"공지\") ? (\r\n                            <tr className='qna_Tboard_st'>\r\n                                <td className='qna_board_st1'>{item.num}</td>\r\n                                <td className='qna_Tboard_st2'>{item.itemInfo}</td>\r\n                                <td className='qna_board_st3'>{item.category}</td>\r\n                                <td className='qna_board_st4'>\r\n                                    <a className='title_button' onClick={() => handleTitleClick(i)}>{item.title}</a>\r\n                                </td>\r\n                                <td className='qna_board_st5'>{item.writer}</td>\r\n                                <td className='qna_board_st6'>{item.date}</td>\r\n                            </tr>\r\n                        ) : (\r\n                            <tr className='qna_Lboard_st'>\r\n                                <td className='qna_board_st1'>{item.num}</td>\r\n                                <td className='qna_Lboard_st2'>\r\n                                    <div><img src={`../thumbs/${item.imgNo}_1.jpg`} alt='상품' /></div>\r\n                                    <div>{item.itemInfo}</div>\r\n                                </td>\r\n                                <td className='qna_board_st3'>{item.category}</td>\r\n                                <td className='qna_board_st4'>\r\n                                    <a className='title_button' onClick={() => handleTitleClick(i)}>{item.title}</a>\r\n                                </td>\r\n                                <td className='qna_board_st5'>{lastName(item.writer)}&#42;&#42;</td>\r\n                                <td className='qna_board_st6'>{item.date}</td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                    {expandedId === i && (\r\n                        <tr className='qna_board_st7'>\r\n                            <td colSpan=\"8\" className='notification_row'>\r\n                                {item.notification}\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </React.Fragment>\r\n            ))}\r\n        </tbody>\r\n    );\r\n} //QnaListItem\r\n\r\nexport default QnaListItem;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Qna\\QnaFilter.jsx",["409","410"],[],"import './Qna.css';\r\nimport React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst QnaFilter = ({ setFilters }) => {\r\n    function handleCategoryChange(e) {\r\n        let category = e.target.value;\r\n\r\n        setFilters((filters) => ({ ...filters, category }));\r\n    }\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const {\r\n            search_date: { value: date },\r\n            search_key: { value: key },\r\n            search_query: { value: query },\r\n        } = e.target.elements;\r\n\r\n        setFilters((filters) => ({ ...filters, date, key, query }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"qna_filter_container\">\r\n            <div className=\"qna_board_sort\">\r\n                <select name=\"board_category\" id=\"board_category\" onChange={handleCategoryChange}>\r\n                    <option value=\"\">전체</option>\r\n                    <option>상품문의</option>\r\n                    <option>배송문의</option>\r\n                    <option>주문/결제</option>\r\n                    <option>취소문의</option>\r\n                    <option>반품/교환</option>\r\n                    <option>환불문의</option>\r\n                    <option>재입고문의</option>\r\n                    <option>기타문의</option>\r\n                </select>\r\n                <form className=\"qna_board_find\" onSubmit={handleSubmit}>\r\n                    <fieldset>\r\n                        <legend>게시물 검색</legend>\r\n                        <select name=\"search_date\" id=\"search_date\">\r\n                            <option value=\"\">모든 기간</option>\r\n                            <option value=\"week\">일주일</option>\r\n                            <option value=\"month\">한달</option>\r\n                            <option value=\"month3\">세달</option>\r\n                        </select>\r\n                        <select name=\"search_key\" id=\"search_key\">\r\n                            <option value=\"subject\">제목</option>\r\n                            <option value=\"content\">내용</option>\r\n                            <option value=\"writer_name\">작성자</option>\r\n                            <option value=\"product\">상품정보</option>\r\n                        </select>\r\n                        <input type=\"text\" name=\"search_query\" /><button className=\"qna_board_find_btn\">찾기</button>\r\n                    </fieldset>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default QnaFilter;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Qna\\QnaTitleList.jsx",["411"],[],"// import { table } from 'console';\r\nimport './Qna.css';\r\nimport React, { useState } from \"react\";\r\n\r\nfunction QnaTitleList() {\r\n\r\n    return (\r\n        <thead className=\"qna_TitleList_container\">\r\n            <tr className='qna_Tboard_st'>\r\n                <td className='qna_board_name'>번호</td>\r\n                <td className='qna_board_name'>상품정보</td>\r\n                <td className='qna_board_name'>카테고리</td>\r\n                <td className='qna_board_name'>제목</td>\r\n                <td className='qna_board_name'>작성자</td>\r\n                <td className='qna_board_name'>작성일</td>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nexport default QnaTitleList;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductDetail\\Modal\\AddCart.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Main\\MiniItems.jsx",["412"],[],"import '../../pages/Main/Main.css';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst MiniItems = ({ id, imgNo, blacklabel, mini_1, mini_2, proname, proprice, sale, castle }) => {\r\n\r\n\r\n    const [imageSrc, setImageSrc] = useState(\"./images/emptyheart.png\"); // 초기 상태는 선택이 되지 않은 상태를 나타내기 위함\r\n    const [isClicked, setIsClicked] = useState(false); // 클릭 여부를 state로 관리\r\n\r\n    const handleClick = () => {\r\n        if (isClicked) {\r\n            setImageSrc(\"./images/emptyheart.png\");\r\n            setIsClicked(false); // 초기 상태 false 일 땐 초기 상태 이미지 src\r\n        } else {\r\n            setImageSrc(\"./images/fullheart.png\");\r\n            setIsClicked(true); // true일 땐 변경될 이미지 src\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"MiniItems\">\r\n\r\n            <div className=\"MiniItembox\">\r\n                <Link to={castle}>\r\n                    <div className=\"colsection\">\r\n                        <div className=\"img_top\">{blacklabel}</div>\r\n                        {/* <img className=\"colsec_img\" src={\"./images/sofa.jpg\"} alt=\"소가죽소파\" /> */}\r\n                        <div className=\"colsec_img\"><img src={`../images/mini${imgNo}.jpg`} /></div>\r\n                        <div className=\"colsec_info\">\r\n                            <div className=\"colsec_mini\">{mini_1}<br />{mini_2}</div>\r\n                            <div className=\"colsec_name\">{proname}</div>\r\n                            <div className=\"colsec_price\">{proprice}<sup>{sale}</sup></div>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n           \r\n\r\n                <img className=\"heartbtn\"\r\n                    src={imageSrc}\r\n                    onClick={handleClick}\r\n                    alt=\"하트찜\" />\r\n             </div>\r\n\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default MiniItems;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductDetail\\Modal\\RModal.jsx",["413","414","415","416","417","418","419","420","421","422"],[],"import React from \"react\";\r\nimport \"./RModal.css\";\r\nimport { useState, useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport mockList from '../../../data/ItemsData'\r\n\r\n\r\n\r\n\r\n\r\nfunction RModal({ closeModal, onReviewTextChange }) {\r\n\r\n    // 상품목록리스트에서 id 값에 따라 상품 상세 반영하기\r\n    const { mockList_id } = useParams();\r\n    const indiItem = mockList.filter((content) => content.id === parseInt(mockList_id))\r\n    const { id, imgNo, productName, productPriceFormatted, productPromotion, productInfo, productReview, productGrade } = indiItem[0]\r\n\r\n\r\n    // 권한 동의 내용 unfolded\r\n    const [isPrivacyTextVisible, setIsPrivacyTextVisible] = useState(false);\r\n    const handleMoreButtonClick = () => {\r\n        setIsPrivacyTextVisible(!isPrivacyTextVisible);\r\n    };\r\n    // 권한 동의 체크 상태\r\n    const [isPrivacyAgreed, setIsPrivacyAgreed] = useState(false);\r\n\r\n\r\n    // 권한 동의 체크가 안 되었을 때 처리 (예: 경고창 띄우기 등)\r\n    const handleAddReview = () => {\r\n        if (isPrivacyAgreed) {\r\n            onReviewTextChange(localReviewText); // 리뷰 내용을 부모 컴포넌트로 전달\r\n            closeModal();\r\n        } else {\r\n            alert('리뷰 수집 및 사용 권한에 동의해주세요.');\r\n        }\r\n    };\r\n\r\n\r\n    // 별점 기능\r\n    const [selectedRating, setSelectedRating] = useState(5); // 초기 값으로 5 설정\r\n\r\n\r\n    const handleRatingClick = (rating) => {\r\n        setSelectedRating(rating);\r\n    };\r\n\r\n    // 이미지첨부 창 띄우기\r\n    const [showMediaOptions, setShowMediaOptions] = useState(false);\r\n\r\n    const toggleMediaOptions = () => {\r\n        setShowMediaOptions(!showMediaOptions);\r\n    };\r\n\r\n    // 이미지 첨부 창 닫기\r\n    const closeMediaOptions = () => {\r\n        setShowMediaOptions(false);\r\n    };\r\n\r\n    // //리뷰 내용 부모 컴포넌트에 전달하기\r\n    // const [textValue, setTextValue] = useState('');\r\n\r\n    // const handleTextareaChange = (event) => {\r\n    //     const newTextValue = event.target.value;\r\n    //     setTextValue(newTextValue);\r\n    //     onReviewTextChange(newTextValue); // 부모 컴포넌트로 전달\r\n    // };\r\n    const [localReviewText, setLocalReviewText] = useState(''); // RModal 내부에서 사용하는 리뷰 내용 상태\r\n\r\n    const handleLocalReviewTextChange = (text) => {\r\n        setLocalReviewText(text);\r\n    };\r\n\r\n\r\n    // 파일업로드\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const fileInputRef = useRef(null);\r\n\r\n    const handleFileChange = (event) => {\r\n        setSelectedFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleUploadButtonClick = () => {\r\n        // 클릭 시 파일 입력 요소 클릭\r\n        fileInputRef.current.click();\r\n    };\r\n\r\n    const handleUpload = () => {\r\n        if (selectedFile) {\r\n            // 여기서 파일을 업로드하는 로직을 구현\r\n            console.log(\"Uploading file:\", selectedFile);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"RModal\">\r\n            <form id=\"review_write_info\" action=\"\" method=\"post\">\r\n\r\n                <div className=\"close_pannel\">\r\n                    <div className=\"title\">리뷰 작성</div>\r\n                    <button type=\"button\" className=\"btn close\" onClick={closeModal}>\r\n                        <img src=\"https://cdn.snapfit.co.kr/review/images/close.png\"></img>\r\n                    </button>\r\n                </div>\r\n                <div className=\"popup_wrapper\">\r\n                    <div className=\"sf_order_list_wrap\">\r\n                        <span className=\"owl-carousel-nav prev\"></span>\r\n                        <div className=\"sf_order_item\">\r\n                            <div className=\"thumbnail\"> <img src={`/thumbs/${imgNo}_1.jpg`} className=\"\" />\r\n                            </div>\r\n                            <div className=\"sf_buy_option\">\r\n                                <div className=\"sf_review_item_name sf_one_line\">{productName}</div>\r\n                                <div className=\"sf_review_user_useally_selected_option sf_one_line\">\r\n                                    <div id=\"\" className=\"option\">\r\n                                        <span className=\"size_wrap\">\r\n                                            <span className=\"key\">상품코드</span><span className=\"separ\"> : </span>\r\n                                            <span className=\"value\">0000{id}</span>\r\n                                        </span>\r\n                                        <span className=\"unit\"></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"main_score\">\r\n                            <div className=\"score_info\">\r\n                                <div className=\"title_info clearfix\">\r\n                                    <div className=\"necessary_wrap\">\r\n                                        <span className=\"necessary_point\"></span>\r\n                                    </div>\r\n                                    <p className=\"title\">리뷰 평점</p>\r\n                                    <div className=\"pannel clearfix\">\r\n                                        <input className=\"score\" name=\"score[]\" type=\"hidden\" value={selectedRating} />\r\n                                        <div className=\"star_info\">\r\n                                            {[1, 2, 3, 4, 5].map((rating) => (\r\n                                                <span\r\n                                                    key={rating}\r\n                                                    className={`pin_custom_font_color star ${selectedRating >= rating ? 'selected' : ''}`}\r\n                                                    onClick={() => handleRatingClick(rating)}\r\n                                                >\r\n                                                    {selectedRating >= rating ? '★' : '☆'}\r\n                                                </span>\r\n                                            ))}\r\n                                        </div> <span className=\"now_score\">{selectedRating}</span>\r\n                                        <button type=\"button\" className=\"btn more view_right sf_displaynone\"></button>\r\n                                        <span className=\"now_score_text view_right sf_displaynone\">아주 좋아요</span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"score_detail sf_displaynone\">\r\n                                    <div id=\"\" className=\"score_item\" data-score=\"1\"><span className=\"score_text\">별로에요</span></div>\r\n                                    <div id=\"\" className=\"score_item\" data-score=\"2\"> <span className=\"score_text\">그냥 그래요</span> </div>\r\n                                    <div id=\"\" className=\"score_item\" data-score=\"3\"> <span className=\"score_text\">보통이에요</span> </div>\r\n                                    <div id=\"\" className=\"score_item\" data-score=\"4\"> <span className=\"score_text\">맘에 들어요</span> </div>\r\n                                    <div id=\"\" className=\"score_item\" data-score=\"5\"> <span className=\"score_text\">아주 좋아요</span> </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"sf_write_wrap\"><div className=\"sf_write\"> <p className=\"title\">내용을 적어주세요</p> <input className=\"default_value\" name=\"review_default_text\" type=\"hidden\" value=\"\" />\r\n                            <textarea\r\n                                className=\"value\"\r\n                                placeholder=\"리뷰를 적어주세요. :)\"\r\n                                name=\"review_text\"\r\n                                value={localReviewText}\r\n                                onChange={(e) => handleLocalReviewTextChange(e.target.value)}></textarea> </div> </div>\r\n\r\n                        <div className=\"sf_media\">\r\n                            <div className=\"contents clearfix\">\r\n                                <div className=\"content content_wrap\">\r\n                                    <div className=\"inner\">\r\n                                        <div className=\"photo\" onClick={toggleMediaOptions} > <img src=\"https://cdn.snapfit.co.kr/review/images/image.png\" /> </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={`select_content_type ${showMediaOptions ? '' : 'sf_displaynone'}`}>\r\n                                <div className=\"popup_title\">미디어 첨부</div>\r\n                                <button className=\"btn close_content\" type=\"button\" onClick={closeMediaOptions}>\r\n                                    <img src=\"https://cdn.snapfit.co.kr/review/images/icons/cancel_image_X.png\" />\r\n                                </button>\r\n                                <input\r\n                                    type=\"file\"\r\n                                    ref={fileInputRef}\r\n                                    style={{ display: \"none\" }} // 숨김 처리\r\n                                    onChange={handleFileChange}\r\n                                />\r\n                                <button\r\n                                    className=\"btn upload_content content_photo\"\r\n                                    type=\"button\"\r\n                                    onClick={handleUploadButtonClick}\r\n                                >\r\n                                    사진 첨부\r\n                                </button>\r\n                                {/* <button className=\"btn upload_content content_photo\" type=\"button\" onChange={handleFileChange} onClick={handleUpload}>사진 첨부</button> */}\r\n                                <button className=\"btn upload_content content_media\" type=\"button\" onClick={handleUploadButtonClick}>동영상 첨부</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"sub_score_wrap sf_displaynone\"> <div className=\"sub_score\"></div> </div>\r\n                        <div className=\"sf_agree_privacy_wrap folded\"> <div className=\"sf_agree_privacy_head\">\r\n                            <input type=\"checkbox\"\r\n                                className=\"sf_check_agree_privacy\"\r\n                                checked={isPrivacyAgreed}\r\n                                onChange={() => setIsPrivacyAgreed(!isPrivacyAgreed)} />\r\n                            <p className=\"title\">리뷰 수집 및 사용 권한 동의</p> <button type=\"button\" className=\"btn more view_right\" onClick={handleMoreButtonClick}></button> </div> <div className=\"sf_agree_privacy_detail\"> <p className={`sf_agree_privacy_detail ${isPrivacyTextVisible ? '' : 'sf_displaynone'}`}>\r\n                                리뷰의 저작권은 이를 작성한 회원에게 있으며,해당 리뷰가 타인의 저작권 을 침해하는 경우 그에 대한 책임은 회원 본인이 부담합니다.\r\n                                <br /> <br />\r\n                                회원은 당사에게 자신이 작성한 리뷰를 이용할 수 있는 권리 (license)를 부여합니다. 이에 따라 회사는 회원이 작성한 리뷰를 검색, 노출, 판촉, 홍보, 연구, 기타의 자료로\r\n                                무상으로이용할 수 있으며, 본질적인 내용 에 변경을 가하지 않는 범위 내에서 리뷰의 일부를 수정, 복제, 편집할 수 있습니다.\r\n                                <br /> <br />\r\n                                또한, 당사가 제휴한 타사에 복제, 배포, 전송 또는 전시될 수 있습니다.\r\n                                <br /> <br />\r\n                                다만, 후기와 관련 없는 글, 상품에 내용이 적합하지 않은 글, 판매글, 광고글, 비방글 등은 관리자에 의해 통보없이 삭제할수 있습니다.\r\n                            </p> </div> </div>\r\n                        <div className=\"sf_popup_bottom\">\r\n                            <button type=\"button\" className=\"btn later\" onClick={closeModal}>나중에 하기</button>\r\n                            <button type=\"button\" className=\"btn write\" onClick={handleAddReview}>등록</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RModal;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\MyShop\\Mileage.jsx",["423","424","425","426","427"],[],"import React, { useEffect } from 'react';\r\nimport '../MyShop/Mileage.css';\r\nimport { NavLink, Routes, Route, useParams, Link } from 'react-router-dom';\r\nimport MileageHistoryList from './MileageHistoryList';\r\nimport MileageUnavailList from './MileageUnavailList';\r\nimport MileageCouponList from './MileageCouponList';\r\nimport MileageHelp from './MileageHelp';\r\n\r\nclass MileageInfo {\r\n    constructor(title, bank) {  //생성자\r\n        this.title = title;\r\n        this.bank = bank;\r\n    }\r\n}\r\n\r\nexport const mileageInfoList = [\r\n    new MileageInfo(\"총 적립금 : \", \"35,640원\"),\r\n    new MileageInfo(\"사용가능 적립금 : \", \"10,000원\"),\r\n    new MileageInfo(\"사용된 적립금 : \", \"25,640원\"),\r\n    new MileageInfo(\"미가용 적립금 : \", \"300,000원\"),\r\n    new MileageInfo(\"환불예정 적립금 : \", \"0원\"),\r\n];\r\n\r\nfunction Mileage() {\r\n\r\n    return (\r\n        <div className='Mileage'>\r\n            <div id='wrap'>\r\n                <div id='container'>\r\n                    <div id='contents'>\r\n                        <div className=\"path\">\r\n                            <span></span>\r\n                            <ol>\r\n                                <li><Link to=\"/\">홈</Link></li>\r\n                                <li><Link to=\"/MyPage\">&gt; &nbsp;&nbsp;마이쇼핑</Link></li>\r\n                                <li title=\"현재 위치\">&gt; &nbsp;&nbsp;적립금</li>\r\n                            </ol>\r\n                        </div>\r\n                        <div>\r\n                            <div className='headTltleArea'>\r\n                                <h2>적립금</h2>\r\n                            </div>\r\n                            <div className='BaseBox'>\r\n                                <ul>\r\n                                    {mileageInfoList.map((mileageInfo, index) => (\r\n                                        <li key={index}>\r\n                                            <strong className='title'>{mileageInfo.title}</strong>\r\n                                            <span className='data'>\r\n                                                <span>&nbsp;{mileageInfo.bank}</span>\r\n                                            </span>\r\n                                        </li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='ec-base-tab'>\r\n                <ul className='menu'>\r\n                    <li><a><NavLink to=\"./pages/MyPage/MyShop/MileageHistoryList\">적립내역보기</NavLink></a></li>\r\n                    <li className='selected'><a><NavLink to=\"./pages/MyPage/MyShop/MileageUnavailList\">미가용적립내역보기</NavLink></a></li>\r\n                    <li><a><NavLink to=\"./pages/MyPage/MyShop/MileageCouponList\">미가용쿠폰/회원등급적립내역</NavLink></a></li>\r\n                </ul >\r\n            </div >\r\n\r\n            <Routes>\r\n                <Route path=\"/pages/mypage/myshop/mileagehistorylist\" element={<MileageHistoryList />} />\r\n                <Route path=\"/pages/mypage/myshop/mileageunavaillist\" element={<MileageUnavailList />} />\r\n                <Route path=\"/pages/mypage/myshop/mileagecouponlist\" element={<MileageCouponList />} />\r\n            </Routes>\r\n\r\n            <MileageHelp />\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Mileage;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\data\\ItemsData.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\ProductDetail\\Modal\\QModal.jsx",["428","429","430","431","432","433","434"],[],"import React from \"react\";\r\nimport \"./QModal.css\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport mockList from '../../../data/ItemsData'\r\n\r\n\r\n\r\n\r\n\r\nfunction QModal({ closeModal, onReviewTextChange }) {\r\n\r\n    // 상품목록리스트에서 id 값에 따라 상품 상세 반영하기\r\n    const { mockList_id } = useParams();\r\n    const indiItem = mockList.filter((content) => content.id === parseInt(mockList_id))\r\n    const { id, imgNo, productName, productPriceFormatted, productPromotion, productInfo, productReview, productGrade } = indiItem[0]\r\n\r\n    // //리뷰 내용 부모 컴포넌트에 전달하기\r\n    // const [textValue, setTextValue] = useState('');\r\n\r\n    // const handleTextareaChange = (event) => {\r\n    //     const newTextValue = event.target.value;\r\n    //     setTextValue(newTextValue);\r\n    //     onReviewTextChange(newTextValue); // 부모 컴포넌트로 전달\r\n    // };\r\n    const [localQuestText, setLocalQuestText] = useState(''); // QModal 내부에서 사용하는 리뷰 내용 상태\r\n\r\n    const handleLocalQuestTextChange = (text) => {\r\n        setLocalQuestText(text);\r\n    };\r\n\r\n    // 리뷰 내용 자식모달 컴포넌트에서 값 받아오기\r\n   // 리뷰 값 받아온 것을 mockList에 추가하기\r\n   const [questss, setQuests] = useState([]);\r\n\r\n   const handleQuestTextChange = (questText) => {\r\n       const newQuest = {\r\n           title: '새 리뷰', // 필요한 속성 추가\r\n           writer: '사용자', // 필요한 속성 추가\r\n           createDate: new Date().toLocaleDateString(), // 필요한 속성 추가\r\n           check: 0, // 필요한 속성 추가\r\n           content: questText // 사용자 리뷰 내용 추가\r\n       };\r\n       setQuests([...questss, newQuest]); // 리뷰 목록에 새 리뷰 추가\r\n   };\r\n\r\n   \r\n    const handleAddQuest = () => {\r\n        handleQuestTextChange(localQuestText); // 리뷰 내용을 부모 컴포넌트로 전달\r\n        closeModal();\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"QModal\">\r\n            <form id=\"review_write_info\" action=\"\" method=\"post\">\r\n\r\n                <div className=\"close_pannel\">\r\n                    <div className=\"title\">상품 문의</div>\r\n                    <button type=\"button\" className=\"btn close\" onClick={closeModal}>\r\n                        <img src=\"https://cdn.snapfit.co.kr/review/images/close.png\"></img>\r\n                    </button>\r\n                </div>\r\n                <div className=\"popup_wrapper\">\r\n                    <div className=\"sf_order_list_wrap\">\r\n                        <span className=\"owl-carousel-nav prev\"></span>\r\n                        <div className=\"sf_order_item\">\r\n                            <div className=\"thumbnail\"> <img src={`/thumbs/${imgNo}_1.jpg`} className=\"\" />\r\n                            </div>\r\n                            <div className=\"sf_buy_option\">\r\n                                <div className=\"sf_review_item_name sf_one_line\">{productName}</div>\r\n                                <div className=\"sf_review_user_useally_selected_option sf_one_line\">\r\n                                    <div id=\"\" className=\"option\">\r\n                                        <span className=\"size_wrap\">\r\n                                            <span className=\"key\">상품코드</span><span className=\"separ\"> : </span>\r\n                                            <span className=\"value\">0000{id}</span>\r\n                                        </span>\r\n                                        <span className=\"unit\"></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className=\"sf_write_wrap\"><div className=\"sf_write\"> <p className=\"title\">내용을 적어주세요</p> <input className=\"default_value\" name=\"review_default_text\" type=\"hidden\" value=\"\" />\r\n                            <textarea\r\n                                className=\"value\"\r\n                                placeholder=\"궁금하신 점을 적어주세요. :)\"\r\n                                name=\"quest_text\"\r\n                                value={localQuestText}\r\n                                onChange={(e) => handleLocalQuestTextChange(e.target.value)}></textarea> </div>\r\n                        </div>\r\n\r\n                        <div className=\"sf_popup_bottom\">\r\n                            <button type=\"button\" className=\"btn later\" onClick={closeModal}>나중에 하기</button>\r\n                            <button type=\"button\" className=\"btn write\" onClick={handleAddQuest}>등록</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default QModal;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\components\\ScrollToTop.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\MyShop\\MileageUnavailList.jsx",["435"],[],"import '../MyShop/Mileage.css';\r\nimport React, { useEffect } from 'react';\r\nimport Pagination from '../../../components/Pagination/Pagination';\r\n\r\nfunction MileageUnavailList() {\r\n    \r\n    return (\r\n        <div className='MileageUnavailList'>\r\n            <div id='wrap'>\r\n                <div id='container'>\r\n                    <div id='contents'>\r\n\r\n                        <div className='UnavailList_inside'>\r\n                            <div className='Base_Table_TypeList'>\r\n                                <table border=\"1\" summary>\r\n                                    <thead><tr>\r\n                                        <th scope=\"col\">주문날짜</th>\r\n                                        <th scope=\"col\">적립금</th>\r\n                                        <th scope=\"col\">관련 주문</th>\r\n                                        <th scope=\"col\">사용가능 예정일</th>\r\n                                        <th scope=\"col\">내용</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody className=\" center\">\r\n                                        <tr className=\"ec-base-table\">\r\n                                            <td>2023-06-07</td>\r\n                                            <td className=\"right\">5,000원</td>\r\n                                            <td>철의 왕좌</td>\r\n                                            <td className=\"left\">2023-09-08</td>\r\n                                            <td className=\"left\">구매 적립금</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Pagination />\r\n                    {/* <div className=\"ec-base-paginate\"><a className=\"first\"><img src=\"/images/btn_page_first.gif\" alt=\"첫 페이지\" /></a>\r\n                        <a><img src=\"/images/btn_page_prev.gif\" alt=\"이전 페이지\" /></a>\r\n                        <ol>\r\n                            <li className=\"record\"><p href=\"\" className=\"this\">1</p></li>\r\n                        </ol>\r\n                        <a><img src=\"/images/btn_page_next.gif\" alt=\"다음 페이지\" /></a>\r\n                        <a className=\"last\"><img src=\"/images/btn_page_last.gif\" alt=\"마지막 페이지\" /></a>\r\n                    </div> */}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MileageUnavailList;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\MyShop\\MileageHistoryList.jsx",["436"],[],"import '../MyShop/Mileage.css';\r\nimport React, { useEffect } from 'react';\r\nimport Pagination from '../../../components/Pagination/Pagination';\r\n\r\n// class MileageHistoryListInfo {\r\n//     constructor(date, mileage, order, info) {  //생성자\r\n//         this.date = date;\r\n//         this.mileage = mileage;\r\n//         this.order = order;\r\n//         this.info = info;\r\n//     }\r\n// }\r\n\r\n// export const mileageHistoryList = [\r\n//     new MileageHistoryListInfo(\"2023-05-04 : \", \"1,000원\", \" \", \"신규회원 적립금\"),\r\n//     new MileageHistoryListInfo(\"2023-05-04 : \", \",원\", \" \", \"신규회원 적립금\"),\r\n//     new MileageHistoryListInfo(\"2023-05-04 : \", \",원\", \" \", \"신규회원 적립금\"),\r\n//     new MileageHistoryListInfo(\"2023-05-04 : \", \",원\", \" \", \"신규회원 적립금\"),\r\n// ];\r\n\r\nfunction MileageHistoryList() {\r\n\r\n    return (\r\n        <div className='MileageHistoryList'>\r\n            <div id='wrap'>\r\n                <div id='container'>\r\n                    <div id='contents'>\r\n\r\n                            <div className='HistoryList_inside'>\r\n                                <div className='Base_Table_TypeList'>\r\n                                    <table border=\"1\" summary>\r\n                                        <thead><tr>\r\n                                            <th scope=\"col\">주문날짜</th>\r\n                                            <th scope=\"col\">적립금</th>\r\n                                            <th scope=\"col\">관련 주문</th>\r\n                                            <th scope=\"col\">내용</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody className=\" center\">\r\n                                            <tr className=\"ec-base-table\">\r\n                                                <td>2023-06-07</td>\r\n                                                <td className=\"right\">1,000원</td>\r\n                                                <td>-</td>\r\n                                                <td className=\"left\">신규회원 적립금</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                    <Pagination />\r\n                        {/* <div className=\"ec-base-paginate\"><a className=\"first\"><img src=\"/images/btn_page_first.gif\" alt=\"첫 페이지\" /></a>\r\n                        <a><img src=\"/images/btn_page_prev.gif\" alt=\"이전 페이지\" /></a>\r\n                            <ol>\r\n                                <li className=\"record\"><p href=\"\" className=\"this\">1</p></li>\r\n                            </ol>\r\n                            <a><img src=\"/images/btn_page_next.gif\" alt=\"다음 페이지\" /></a>\r\n                            <a className=\"last\"><img src=\"/images/btn_page_last.gif\" alt=\"마지막 페이지\" /></a>\r\n                        </div> */}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MileageHistoryList;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\MyShop\\MileageCouponList.jsx",["437"],[],"import '../MyShop/Mileage.css';\r\nimport React, { useEffect } from 'react';\r\nimport Pagination from '../../../components/Pagination/Pagination';\r\n\r\nfunction MileageCouponList() {\r\n\r\n    return (\r\n        <div className='MileageCouponList'>\r\n            <div id='wrap'>\r\n                <div id='container'>\r\n                    <div id='contents'>\r\n\r\n                        <div className='CouponList_inside'>\r\n                            <div className='Base_Table_TypeList'>\r\n                                <table border=\"1\" summary>\r\n                                    <thead><tr>\r\n                                        <th scope=\"col\">주문날짜</th>\r\n                                        <th scope=\"col\">미가용 쿠폰</th>\r\n                                        <th scope=\"col\">관련 주문</th>\r\n                                        <th scope=\"col\">사용가능 예정일</th>\r\n                                        <th scope=\"col\">내용</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody className=\" center\">\r\n                                        <tr className=\"ec-base-table\">\r\n                                            <td>2023-06-07</td>\r\n                                            <td className=\"right\">5,000원</td>\r\n                                            <td>철의 왕좌</td>\r\n                                            <td className=\"left\">2023-09-08</td>\r\n                                            <td className=\"left\">킹쿤타 회원 (VIP)</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Pagination />\r\n                    {/* <div className=\"ec-base-paginate\"><a className=\"first\"><img src=\"/images/btn_page_first.gif\" alt=\"첫 페이지\" /></a>\r\n                        <a><img src=\"/images/btn_page_prev.gif\" alt=\"이전 페이지\" /></a>\r\n                        <ol>\r\n                            <li className=\"record\"><p href=\"\" className=\"this\">1</p></li>\r\n                        </ol>\r\n                        <a><img src=\"/images/btn_page_next.gif\" alt=\"다음 페이지\" /></a>\r\n                        <a className=\"last\"><img src=\"/images/btn_page_last.gif\" alt=\"마지막 페이지\" /></a>\r\n                    </div> */}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MileageCouponList;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\MyPage\\MyShop\\MileageHelp.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Qna\\QnaPage.jsx",[],[],"D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Login\\FindPasswordModal\\FindPasswordModal.jsx",["438","439"],[],"import React, { useState } from \"react\";\r\nimport \"./FindPasswordModal.css\";\r\n\r\nfunction FindPasswordModal({ setModalVisible }) {\r\n    const [step, setStep] = useState(0); // 0: 기본, 1: 인증번호전송, 2: 인증완료\r\n\r\n    const onClickSend = () => {\r\n        setStep(1);\r\n        alert(\"인증번호가 발송되었습니다.\");\r\n    };\r\n\r\n    const onClickcheck = () => {\r\n        setStep(2);\r\n        alert(\"인증이 완료되었습니다.\");\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (e.target.elements.password.value == \"\") {\r\n            alert(\"새 비밀번호를 입력해주세요.\");\r\n            return;\r\n        }\r\n        alert(\"비밀번호 변경이 완료되었습니다.\");\r\n        setModalVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div id=\"login_findPasswordModal\">\r\n            <div className=\"login_bg\" onClick={() => { setModalVisible(false); }}></div>\r\n            <div className=\"login_container\">\r\n                <div className=\"login_inner\">\r\n                    <img\r\n                        onClick={() => {\r\n                            setModalVisible(false); // 모달 닫기\r\n                        }}\r\n                        className=\"login_btn_close\"\r\n                        src=\"../images/search_X.png\"\r\n                        alt=\"search_x\"\r\n                    />\r\n                    <div className='login_writeArea'>\r\n                        <h2>비밀번호 찾기</h2>\r\n                    </div>\r\n                    <form className=\"login_write_info\" onSubmit={onSubmit}>\r\n                        <table className=\"login_board_table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th scope=\"row\"><label htmlFor=\"email\">아이디</label></th>\r\n                                    <td colSpan={2}>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"id\"\r\n                                            id=\"id\"\r\n                                            placeholder=\"가입 시 입력하신 아이디을 입력해주세요.\"\r\n                                            style={{ width: \"100%\" }}\r\n                                        />\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th scope=\"row\"><label htmlFor=\"email\">이메일</label></th>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"email\"\r\n                                            id=\"email\"\r\n                                            placeholder=\"가입 시 입력하신 이메일을 입력해주세요.\"\r\n                                            style={{ width: \"100%\" }}\r\n                                        />\r\n                                    </td>\r\n                                    <td className=\"login_td_btn\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={onClickSend}\r\n                                            className=\"login_send_btn\"\r\n                                        >\r\n                                            인증번호 전송\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                                {\r\n                                    step > 0 &&\r\n                                    <tr>\r\n                                        <th scope=\"row\"><label htmlFor=\"code\">인증번호</label></th>\r\n                                        <td>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                name=\"code\"\r\n                                                id=\"code\"\r\n                                                placeholder=\"인증번호를 입력해주세요\"\r\n                                                style={{ width: \"100%\" }}\r\n                                            />\r\n                                        </td>\r\n                                        <td className=\"login_td_btn\">\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                onClick={onClickcheck}\r\n                                                className=\"login_check_btn\"\r\n                                            >\r\n                                                인증확인\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                }\r\n                                {\r\n                                    step > 1 &&\r\n                                    <tr>\r\n                                        <th scope=\"row\"><label htmlFor=\"password\">새 비밀번호</label></th>\r\n                                        <td colSpan={2}>\r\n                                            <input\r\n                                                type=\"password\"\r\n                                                name=\"password\"\r\n                                                id=\"password\"\r\n                                                placeholder=\"새 비밀번호를 입력해주세요\"\r\n                                                style={{ width: \"100%\" }}\r\n                                            />\r\n                                        </td>\r\n                                    </tr>\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"login_btns\">\r\n                            <div className=\"login_btnSet\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"login_submit_btn\"\r\n                                    disabled={step != 2}\r\n                                >\r\n                                    비밀번호 변경\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"login_btnSet_cancel\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={() => { setModalVisible(false); }}\r\n                                    className=\"login_back_btn\"\r\n                                >\r\n                                    취소하기\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FindPasswordModal;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Login\\FindIdModal\\FindIdModal.jsx",["440"],[],"import React, { useState } from \"react\";\r\nimport \"./FindIdModal.css\";\r\n\r\nfunction FindIdModal({ setModalVisible }) {\r\n    const [step, setStep] = useState(0); // 0: 기본, 1: 인증번호전송, 2: 인증완료\r\n\r\n    const onClickSend = () => {\r\n        setStep(1);\r\n        alert(\"인증번호가 발송되었습니다.\");\r\n    };\r\n\r\n    const onClickcheck = () => {\r\n        setStep(2);\r\n        alert(\"인증이 완료되었습니다.\");\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        alert(\"아이디 찾기가 완료되었습니다.\");\r\n        setModalVisible(false);\r\n    };\r\n\r\n    return (\r\n        <div id=\"login_findIdModal\">\r\n            <div className=\"login_bg\" onClick={() => { setModalVisible(false); }}></div>\r\n            <div className=\"login_container\">\r\n                <div className=\"login_inner\">\r\n                    <img\r\n                        onClick={() => {\r\n                            setModalVisible(false); // 모달 닫기\r\n                        }}\r\n                        className=\"login_btn_close\"\r\n                        src=\"../images/search_X.png\"\r\n                        alt=\"search_x\"\r\n                    />\r\n                    <div className='login_writeArea'>\r\n                        <h2>아이디 찾기</h2>\r\n                    </div>\r\n                    <form className=\"login_write_info\" onSubmit={onSubmit}>\r\n                        <table className=\"login_board_table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th scope=\"row\"><label htmlFor=\"email\">이메일</label></th>\r\n                                    <td>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"email\"\r\n                                            id=\"email\"\r\n                                            placeholder=\"가입 시 입력하신 이메일을 입력해주세요.\"\r\n                                            style={{ width: \"100%\" }}\r\n                                        />\r\n                                    </td>\r\n                                    <td className=\"login_td_btn\">\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            onClick={onClickSend}\r\n                                            className=\"login_send_btn\"\r\n                                        >\r\n                                            인증번호 전송\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                                {\r\n                                    step > 0 &&\r\n                                    <tr>\r\n                                        <th scope=\"row\"><label htmlFor=\"code\">인증번호</label></th>\r\n                                        <td>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                name=\"code\"\r\n                                                id=\"code\"\r\n                                                placeholder=\"인증번호를 입력해주세요\"\r\n                                                style={{ width: \"100%\" }}\r\n                                            />\r\n                                        </td>\r\n                                        <td className=\"login_td_btn\">\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                onClick={onClickcheck}\r\n                                                className=\"login_check_btn\"\r\n                                            >\r\n                                                인증확인\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                        <div className=\"login_btns\">\r\n                            <div className=\"login_btnSet\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"login_submit_btn\"\r\n                                    disabled={step != 2}\r\n                                >\r\n                                    아이디 찾기\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"login_btnSet_cancel\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={() => { setModalVisible(false); }}\r\n                                    className=\"login_back_btn\"\r\n                                >\r\n                                    취소하기\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FindIdModal;","D:\\MTest\\ojoaproject\\react\\ojoa_project\\src\\pages\\Checkout\\Checkout.jsx",["441","442","443","444","445"],[],{"ruleId":"446","severity":1,"message":"447","line":3,"column":10,"nodeType":"448","messageId":"449","endLine":3,"endColumn":23},{"ruleId":"446","severity":1,"message":"450","line":23,"column":8,"nodeType":"448","messageId":"449","endLine":23,"endColumn":19},{"ruleId":"446","severity":1,"message":"451","line":93,"column":11,"nodeType":"448","messageId":"449","endLine":93,"endColumn":15},{"ruleId":"446","severity":1,"message":"452","line":104,"column":11,"nodeType":"448","messageId":"449","endLine":104,"endColumn":19},{"ruleId":"453","severity":1,"message":"454","line":191,"column":21,"nodeType":"455","endLine":191,"endColumn":77},{"ruleId":"453","severity":1,"message":"454","line":200,"column":21,"nodeType":"455","endLine":200,"endColumn":24},{"ruleId":"453","severity":1,"message":"454","line":202,"column":21,"nodeType":"455","endLine":202,"endColumn":24},{"ruleId":"453","severity":1,"message":"454","line":204,"column":21,"nodeType":"455","endLine":204,"endColumn":24},{"ruleId":"453","severity":1,"message":"454","line":206,"column":21,"nodeType":"455","endLine":206,"endColumn":24},{"ruleId":"446","severity":1,"message":"456","line":1,"column":17,"nodeType":"448","messageId":"449","endLine":1,"endColumn":27},{"ruleId":"446","severity":1,"message":"457","line":1,"column":29,"nodeType":"448","messageId":"449","endLine":1,"endColumn":42},{"ruleId":"446","severity":1,"message":"458","line":1,"column":44,"nodeType":"448","messageId":"449","endLine":1,"endColumn":54},{"ruleId":"446","severity":1,"message":"459","line":1,"column":56,"nodeType":"448","messageId":"449","endLine":1,"endColumn":62},{"ruleId":"446","severity":1,"message":"460","line":8,"column":8,"nodeType":"448","messageId":"449","endLine":8,"endColumn":13},{"ruleId":"461","severity":1,"message":"462","line":36,"column":8,"nodeType":"463","endLine":36,"endColumn":14,"suggestions":"464"},{"ruleId":"461","severity":1,"message":"462","line":43,"column":8,"nodeType":"463","endLine":43,"endColumn":23,"suggestions":"465"},{"ruleId":"446","severity":1,"message":"466","line":4,"column":10,"nodeType":"448","messageId":"449","endLine":4,"endColumn":15},{"ruleId":"446","severity":1,"message":"467","line":4,"column":17,"nodeType":"448","messageId":"449","endLine":4,"endColumn":20},{"ruleId":"446","severity":1,"message":"468","line":4,"column":22,"nodeType":"448","messageId":"449","endLine":4,"endColumn":26},{"ruleId":"446","severity":1,"message":"469","line":4,"column":28,"nodeType":"448","messageId":"449","endLine":4,"endColumn":34},{"ruleId":"446","severity":1,"message":"470","line":4,"column":36,"nodeType":"448","messageId":"449","endLine":4,"endColumn":45},{"ruleId":"446","severity":1,"message":"471","line":4,"column":47,"nodeType":"448","messageId":"449","endLine":4,"endColumn":55},{"ruleId":"446","severity":1,"message":"472","line":4,"column":57,"nodeType":"448","messageId":"449","endLine":4,"endColumn":61},{"ruleId":"446","severity":1,"message":"473","line":4,"column":63,"nodeType":"448","messageId":"449","endLine":4,"endColumn":66},{"ruleId":"453","severity":1,"message":"454","line":17,"column":25,"nodeType":"455","endLine":17,"endColumn":28},{"ruleId":"453","severity":1,"message":"454","line":26,"column":33,"nodeType":"455","endLine":26,"endColumn":56},{"ruleId":"453","severity":1,"message":"454","line":29,"column":33,"nodeType":"455","endLine":29,"endColumn":57},{"ruleId":"453","severity":1,"message":"454","line":36,"column":42,"nodeType":"455","endLine":36,"endColumn":45},{"ruleId":"453","severity":1,"message":"454","line":37,"column":42,"nodeType":"455","endLine":37,"endColumn":45},{"ruleId":"453","severity":1,"message":"454","line":39,"column":42,"nodeType":"455","endLine":39,"endColumn":45},{"ruleId":"453","severity":1,"message":"454","line":40,"column":42,"nodeType":"455","endLine":40,"endColumn":45},{"ruleId":"453","severity":1,"message":"454","line":105,"column":33,"nodeType":"455","endLine":105,"endColumn":56},{"ruleId":"453","severity":1,"message":"454","line":109,"column":33,"nodeType":"455","endLine":109,"endColumn":36},{"ruleId":"474","severity":1,"message":"475","line":81,"column":29,"nodeType":"476","messageId":"477","endLine":81,"endColumn":30,"suggestions":"478"},{"ruleId":"474","severity":1,"message":"479","line":81,"column":41,"nodeType":"476","messageId":"477","endLine":81,"endColumn":42,"suggestions":"480"},{"ruleId":"446","severity":1,"message":"481","line":3,"column":10,"nodeType":"448","messageId":"449","endLine":3,"endColumn":18},{"ruleId":"446","severity":1,"message":"482","line":5,"column":10,"nodeType":"448","messageId":"449","endLine":5,"endColumn":14},{"ruleId":"446","severity":1,"message":"481","line":2,"column":17,"nodeType":"448","messageId":"449","endLine":2,"endColumn":25},{"ruleId":"446","severity":1,"message":"483","line":2,"column":27,"nodeType":"448","messageId":"449","endLine":2,"endColumn":36},{"ruleId":"453","severity":1,"message":"484","line":46,"column":41,"nodeType":"455","endLine":46,"endColumn":79},{"ruleId":"461","severity":1,"message":"485","line":30,"column":8,"nodeType":"463","endLine":30,"endColumn":29,"suggestions":"486"},{"ruleId":"446","severity":1,"message":"483","line":1,"column":17,"nodeType":"448","messageId":"449","endLine":1,"endColumn":26},{"ruleId":"446","severity":1,"message":"483","line":2,"column":17,"nodeType":"448","messageId":"449","endLine":2,"endColumn":26},{"ruleId":"446","severity":1,"message":"483","line":1,"column":17,"nodeType":"448","messageId":"449","endLine":1,"endColumn":26},{"ruleId":"453","severity":1,"message":"454","line":26,"column":33,"nodeType":"455","endLine":26,"endColumn":56},{"ruleId":"453","severity":1,"message":"454","line":30,"column":33,"nodeType":"455","endLine":30,"endColumn":36},{"ruleId":"453","severity":1,"message":"484","line":10,"column":25,"nodeType":"455","endLine":10,"endColumn":58},{"ruleId":"453","severity":1,"message":"484","line":11,"column":25,"nodeType":"455","endLine":11,"endColumn":66},{"ruleId":"453","severity":1,"message":"484","line":12,"column":25,"nodeType":"455","endLine":12,"endColumn":66},{"ruleId":"453","severity":1,"message":"484","line":13,"column":25,"nodeType":"455","endLine":13,"endColumn":56},{"ruleId":"453","severity":1,"message":"484","line":14,"column":25,"nodeType":"455","endLine":14,"endColumn":56},{"ruleId":"453","severity":1,"message":"484","line":15,"column":25,"nodeType":"455","endLine":15,"endColumn":56},{"ruleId":"453","severity":1,"message":"484","line":16,"column":25,"nodeType":"455","endLine":16,"endColumn":56},{"ruleId":"453","severity":1,"message":"484","line":17,"column":25,"nodeType":"455","endLine":17,"endColumn":56},{"ruleId":"453","severity":1,"message":"484","line":18,"column":25,"nodeType":"455","endLine":18,"endColumn":56},{"ruleId":"453","severity":1,"message":"484","line":19,"column":25,"nodeType":"455","endLine":19,"endColumn":56},{"ruleId":"453","severity":1,"message":"484","line":20,"column":25,"nodeType":"455","endLine":20,"endColumn":56},{"ruleId":"453","severity":1,"message":"484","line":21,"column":25,"nodeType":"455","endLine":21,"endColumn":67},{"ruleId":"453","severity":1,"message":"484","line":22,"column":25,"nodeType":"455","endLine":22,"endColumn":57},{"ruleId":"446","severity":1,"message":"487","line":10,"column":26,"nodeType":"448","messageId":"449","endLine":10,"endColumn":37},{"ruleId":"446","severity":1,"message":"488","line":51,"column":12,"nodeType":"448","messageId":"449","endLine":51,"endColumn":24},{"ruleId":"446","severity":1,"message":"459","line":2,"column":20,"nodeType":"448","messageId":"449","endLine":2,"endColumn":26},{"ruleId":"446","severity":1,"message":"456","line":2,"column":28,"nodeType":"448","messageId":"449","endLine":2,"endColumn":38},{"ruleId":"446","severity":1,"message":"483","line":2,"column":40,"nodeType":"448","messageId":"449","endLine":2,"endColumn":49},{"ruleId":"446","severity":1,"message":"489","line":4,"column":10,"nodeType":"448","messageId":"449","endLine":4,"endColumn":29},{"ruleId":"446","severity":1,"message":"490","line":5,"column":10,"nodeType":"448","messageId":"449","endLine":5,"endColumn":18},{"ruleId":"446","severity":1,"message":"491","line":10,"column":12,"nodeType":"448","messageId":"449","endLine":10,"endColumn":19},{"ruleId":"453","severity":1,"message":"454","line":120,"column":29,"nodeType":"455","endLine":123,"endColumn":65},{"ruleId":"446","severity":1,"message":"487","line":1,"column":17,"nodeType":"448","messageId":"449","endLine":1,"endColumn":28},{"ruleId":"446","severity":1,"message":"459","line":1,"column":40,"nodeType":"448","messageId":"449","endLine":1,"endColumn":46},{"ruleId":"453","severity":1,"message":"454","line":17,"column":13,"nodeType":"455","endLine":17,"endColumn":36},{"ruleId":"492","severity":1,"message":"493","line":26,"column":47,"nodeType":"494","messageId":"495","endLine":26,"endColumn":49},{"ruleId":"492","severity":1,"message":"496","line":33,"column":30,"nodeType":"494","messageId":"495","endLine":33,"endColumn":32},{"ruleId":"492","severity":1,"message":"496","line":35,"column":35,"nodeType":"494","messageId":"495","endLine":35,"endColumn":37},{"ruleId":"492","severity":1,"message":"496","line":37,"column":35,"nodeType":"494","messageId":"495","endLine":37,"endColumn":37},{"ruleId":"492","severity":1,"message":"496","line":43,"column":29,"nodeType":"494","messageId":"495","endLine":43,"endColumn":31},{"ruleId":"492","severity":1,"message":"496","line":45,"column":34,"nodeType":"494","messageId":"495","endLine":45,"endColumn":36},{"ruleId":"492","severity":1,"message":"496","line":47,"column":34,"nodeType":"494","messageId":"495","endLine":47,"endColumn":36},{"ruleId":"492","severity":1,"message":"496","line":49,"column":34,"nodeType":"494","messageId":"495","endLine":49,"endColumn":36},{"ruleId":"492","severity":1,"message":"496","line":61,"column":35,"nodeType":"494","messageId":"495","endLine":61,"endColumn":37},{"ruleId":"453","severity":1,"message":"454","line":67,"column":37,"nodeType":"455","endLine":67,"endColumn":101},{"ruleId":"453","severity":1,"message":"454","line":81,"column":37,"nodeType":"455","endLine":81,"endColumn":101},{"ruleId":"446","severity":1,"message":"481","line":2,"column":17,"nodeType":"448","messageId":"449","endLine":2,"endColumn":25},{"ruleId":"446","severity":1,"message":"482","line":3,"column":10,"nodeType":"448","messageId":"449","endLine":3,"endColumn":14},{"ruleId":"446","severity":1,"message":"481","line":3,"column":17,"nodeType":"448","messageId":"449","endLine":3,"endColumn":25},{"ruleId":"497","severity":1,"message":"498","line":31,"column":53,"nodeType":"455","endLine":31,"endColumn":95},{"ruleId":"446","severity":1,"message":"499","line":16,"column":37,"nodeType":"448","messageId":"449","endLine":16,"endColumn":58},{"ruleId":"446","severity":1,"message":"500","line":16,"column":60,"nodeType":"448","messageId":"449","endLine":16,"endColumn":76},{"ruleId":"446","severity":1,"message":"501","line":16,"column":78,"nodeType":"448","messageId":"449","endLine":16,"endColumn":89},{"ruleId":"446","severity":1,"message":"502","line":16,"column":91,"nodeType":"448","messageId":"449","endLine":16,"endColumn":104},{"ruleId":"446","severity":1,"message":"503","line":16,"column":106,"nodeType":"448","messageId":"449","endLine":16,"endColumn":118},{"ruleId":"446","severity":1,"message":"504","line":87,"column":11,"nodeType":"448","messageId":"449","endLine":87,"endColumn":23},{"ruleId":"497","severity":1,"message":"498","line":104,"column":25,"nodeType":"455","endLine":104,"endColumn":86},{"ruleId":"497","severity":1,"message":"498","line":111,"column":57,"nodeType":"455","endLine":111,"endColumn":108},{"ruleId":"497","severity":1,"message":"498","line":173,"column":95,"nodeType":"455","endLine":173,"endColumn":158},{"ruleId":"497","severity":1,"message":"498","line":180,"column":37,"nodeType":"455","endLine":180,"endColumn":115},{"ruleId":"446","severity":1,"message":"483","line":1,"column":17,"nodeType":"448","messageId":"449","endLine":1,"endColumn":26},{"ruleId":"446","severity":1,"message":"505","line":3,"column":34,"nodeType":"448","messageId":"449","endLine":3,"endColumn":43},{"ruleId":"453","severity":1,"message":"454","line":62,"column":25,"nodeType":"455","endLine":62,"endColumn":28},{"ruleId":"453","severity":1,"message":"454","line":63,"column":46,"nodeType":"455","endLine":63,"endColumn":49},{"ruleId":"453","severity":1,"message":"454","line":64,"column":25,"nodeType":"455","endLine":64,"endColumn":28},{"ruleId":"446","severity":1,"message":"499","line":16,"column":37,"nodeType":"448","messageId":"449","endLine":16,"endColumn":58},{"ruleId":"446","severity":1,"message":"500","line":16,"column":60,"nodeType":"448","messageId":"449","endLine":16,"endColumn":76},{"ruleId":"446","severity":1,"message":"501","line":16,"column":78,"nodeType":"448","messageId":"449","endLine":16,"endColumn":89},{"ruleId":"446","severity":1,"message":"502","line":16,"column":91,"nodeType":"448","messageId":"449","endLine":16,"endColumn":104},{"ruleId":"446","severity":1,"message":"503","line":16,"column":106,"nodeType":"448","messageId":"449","endLine":16,"endColumn":118},{"ruleId":"497","severity":1,"message":"498","line":64,"column":25,"nodeType":"455","endLine":64,"endColumn":86},{"ruleId":"497","severity":1,"message":"498","line":71,"column":57,"nodeType":"455","endLine":71,"endColumn":108},{"ruleId":"446","severity":1,"message":"483","line":2,"column":17,"nodeType":"448","messageId":"449","endLine":2,"endColumn":26},{"ruleId":"446","severity":1,"message":"483","line":2,"column":17,"nodeType":"448","messageId":"449","endLine":2,"endColumn":26},{"ruleId":"446","severity":1,"message":"483","line":2,"column":17,"nodeType":"448","messageId":"449","endLine":2,"endColumn":26},{"ruleId":"492","severity":1,"message":"496","line":19,"column":46,"nodeType":"494","messageId":"495","endLine":19,"endColumn":48},{"ruleId":"492","severity":1,"message":"493","line":125,"column":52,"nodeType":"494","messageId":"495","endLine":125,"endColumn":54},{"ruleId":"492","severity":1,"message":"493","line":94,"column":52,"nodeType":"494","messageId":"495","endLine":94,"endColumn":54},{"ruleId":"446","severity":1,"message":"481","line":2,"column":17,"nodeType":"448","messageId":"449","endLine":2,"endColumn":25},{"ruleId":"446","severity":1,"message":"506","line":9,"column":7,"nodeType":"448","messageId":"449","endLine":9,"endColumn":15},{"ruleId":"446","severity":1,"message":"507","line":63,"column":50,"nodeType":"448","messageId":"449","endLine":63,"endColumn":58},{"ruleId":"446","severity":1,"message":"508","line":63,"column":60,"nodeType":"448","messageId":"449","endLine":63,"endColumn":69},{"ruleId":"446","severity":1,"message":"509","line":138,"column":13,"nodeType":"448","messageId":"449","endLine":138,"endColumn":20},"no-unused-vars","'ModalProvider' is defined but never used.","Identifier","unusedVar","'productList' is defined but never used.","'test' is assigned a value but never used.","'location' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useContext' is defined but never used.","'createContext' is defined but never used.","'useReducer' is defined but never used.","'useRef' is defined but never used.","'Modal' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateTotal'. Either include it or remove the dependency array.","ArrayExpression",["510"],["511"],"'Chair' is defined but never used.","'Bed' is defined but never used.","'Sofa' is defined but never used.","'Closet' is defined but never used.","'Bookshelf' is defined but never used.","'Lighting' is defined but never used.","'Best' is defined but never used.","'New' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["512","513"],"Unnecessary escape character: \\-.",["514","515"],"'useState' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'calculateTotalPrice'. Either include it or remove the dependency array.",["516"],"'useCallback' is defined but never used.","'isDataLoaded' is assigned a value but never used.","'TodoDispatchContext' is defined but never used.","'useModal' is defined but never used.","'content' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'productPriceFormatted' is assigned a value but never used.","'productPromotion' is assigned a value but never used.","'productInfo' is assigned a value but never used.","'productReview' is assigned a value but never used.","'productGrade' is assigned a value but never used.","'handleUpload' is assigned a value but never used.","'useParams' is defined but never used.","'mockData' is assigned a value but never used.","'setValue' is assigned a value but never used.","'getValues' is assigned a value but never used.","'payment' is assigned a value but never used.",{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"messageId":"521","fix":"522","desc":"523"},{"messageId":"524","fix":"525","desc":"526"},{"messageId":"521","fix":"527","desc":"523"},{"messageId":"524","fix":"528","desc":"526"},{"desc":"529","fix":"530"},"Update the dependencies array to be: [cart, updateTotal]",{"range":"531","text":"532"},"Update the dependencies array to be: [selectedItems, updateTotal]",{"range":"533","text":"534"},"removeEscape",{"range":"535","text":"536"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"537","text":"538"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"539","text":"536"},{"range":"540","text":"538"},"Update the dependencies array to be: [selectedItems, cart, calculateTotalPrice]",{"range":"541","text":"542"},[1137,1143],"[cart, updateTotal]",[1308,1323],"[selectedItems, updateTotal]",[2361,2362],"",[2361,2361],"\\",[2373,2374],[2373,2373],[933,954],"[selectedItems, cart, calculateTotalPrice]"]