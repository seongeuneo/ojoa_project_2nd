{"ast":null,"code":"var _jsxFileName = \"D:\\\\MTest\\\\ojoaproject\\\\react\\\\ojoa_project\\\\src\\\\pages\\\\Qna\\\\QnaListItem.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './Qna.css';\nimport mockList from '../../data/ItemsData';\n// import QnaPost from \"./QnaPost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockListQna = [{\n  id: 0,\n  imgNo: 4,\n  num: 1,\n  category: '상품문의',\n  title: '상품 문의 입니다.',\n  notification: '배송까지 얼마나 걸릴까요. 새벽배송 해줘요?',\n  titleIcon: '[1]',\n  writer: '강백호',\n  date: '2023.06.13'\n}, {\n  id: 1,\n  imgNo: 12,\n  num: 2,\n  category: '상품문의',\n  title: '배송비 질문입니다.',\n  notification: '왕좌의 게임에 나오는 철의 왕좌 같은데요. 추가 배송비가 있는지 궁금합니다. 정품 맞나요?',\n  titleIcon: '[1]',\n  writer: '정대만',\n  date: '2023.08.05'\n}]; // mockListQna\n\n// 배열 속성 writer 입력시 성만 따오기\nconst lastName = fullName => {\n  if (fullName.length > 0) {\n    return fullName.charAt(0);\n  }\n  ;\n  return;\n};\nfunction QnaListItem() {\n  _s();\n  const [expandedId, setExpandedId] = useState(null);\n  const handleTitleClick = id => {\n    if (expandedId === id) {\n      setExpandedId(null);\n    } else {\n      setExpandedId(id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"qna_ListItem_container\",\n    children: mockListQna.map(item => {\n      var _mockList$find;\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"qna_Lboard_st\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"qna_board_st1\",\n              children: item.num\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"qna_board_st2\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `../../images/chair${item.imgNo}.jpg`,\n                alt: \"\\uC0C1\\uD488\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 59\n              }, this), (_mockList$find = mockList.find(product => product.id === item.imgNo)) === null || _mockList$find === void 0 ? void 0 : _mockList$find.productName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"qna_board_st3\",\n              children: item.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"qna_board_st4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"title_button\",\n                onClick: () => handleTitleClick(item.id),\n                children: [item.title, \" \", item.titleIcon]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"qna_board_st5\",\n              children: [lastName(item.writer), \"**\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"qna_board_st6\",\n              children: item.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), expandedId === item.id && /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"qna_board_st7\",\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"6\",\n              className: \"notification_row\",\n              children: item.notification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(QnaListItem, \"qpIQi94hcn+lxkJWgZG2jWze6qI=\");\n_c = QnaListItem;\nexport default QnaListItem;\nvar _c;\n$RefreshReg$(_c, \"QnaListItem\");","map":{"version":3,"names":["React","useState","mockList","jsxDEV","_jsxDEV","mockListQna","id","imgNo","num","category","title","notification","titleIcon","writer","date","lastName","fullName","length","charAt","QnaListItem","_s","expandedId","setExpandedId","handleTitleClick","className","children","map","item","_mockList$find","Fragment","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","find","product","productName","onClick","colSpan","_c","$RefreshReg$"],"sources":["D:/MTest/ojoaproject/react/ojoa_project/src/pages/Qna/QnaListItem.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './Qna.css';\r\nimport mockList from '../../data/ItemsData';\r\n// import QnaPost from \"./QnaPost\";\r\n\r\nconst mockListQna = [\r\n    {\r\n        id: 0,\r\n        imgNo: 4,\r\n        num: 1,\r\n        category: '상품문의',\r\n        title: '상품 문의 입니다.',\r\n        notification: '배송까지 얼마나 걸릴까요. 새벽배송 해줘요?',\r\n        titleIcon: '[1]',\r\n        writer: '강백호',\r\n        date: '2023.06.13'\r\n    },\r\n    {\r\n        id: 1,\r\n        imgNo: 12,\r\n        num: 2,\r\n        category: '상품문의',\r\n        title: '배송비 질문입니다.',\r\n        notification: '왕좌의 게임에 나오는 철의 왕좌 같은데요. 추가 배송비가 있는지 궁금합니다. 정품 맞나요?',\r\n        titleIcon: '[1]',\r\n        writer: '정대만',\r\n        date: '2023.08.05'\r\n    },\r\n]; // mockListQna\r\n\r\n// 배열 속성 writer 입력시 성만 따오기\r\nconst lastName = (fullName) => {\r\n    if (fullName.length > 0) {\r\n        return fullName.charAt(0);\r\n    };\r\n    return;\r\n};\r\n\r\nfunction QnaListItem( ) {\r\n\r\n    const [expandedId, setExpandedId] = useState(null);\r\n\r\n    const handleTitleClick = (id) => {\r\n        if (expandedId === id) {\r\n            setExpandedId(null);\r\n        } else {\r\n            setExpandedId(id);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <table className='qna_ListItem_container'>\r\n\r\n            {mockListQna.map((item) => (\r\n                <React.Fragment key={item.id}>\r\n                    <tbody>\r\n                        <tr className='qna_Lboard_st'>\r\n                            <td className='qna_board_st1'>{item.num}</td>\r\n                            <td className='qna_board_st2'><img src={`../../images/chair${item.imgNo}.jpg`} alt='상품' />{mockList.find(product => product.id === item.imgNo)?.productName}</td>\r\n                            <td className='qna_board_st3'>{item.category}</td>\r\n                            <td className='qna_board_st4'>\r\n                                <div\r\n                                    className='title_button'\r\n                                    onClick={() => handleTitleClick(item.id)}\r\n                                >\r\n                                    {item.title} {item.titleIcon}\r\n                                </div>\r\n                            </td>\r\n                            <td className='qna_board_st5'>{lastName(item.writer)}&#42;&#42;</td>\r\n                            <td className='qna_board_st6'>{item.date}</td>\r\n                        </tr>\r\n                        {expandedId === item.id && (\r\n                            <tr className='qna_board_st7'>\r\n                                <td colSpan=\"6\" className='notification_row'>\r\n                                    {item.notification}\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n\r\n                </React.Fragment>\r\n            ))}\r\n\r\n        </table >\r\n    )\r\n}\r\n\r\nexport default QnaListItem;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}