{"ast":null,"code":"var _jsxFileName = \"D:\\\\MTest\\\\ojoaproject\\\\react\\\\ojoa_project\\\\src\\\\pages\\\\Cart\\\\Cart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../pages/Cart/Cart.css';\nimport CartHeader from '../../pages/Cart/CartHeader';\nimport CartList from '../../pages/Cart/CartList';\nimport CartTotal from '../../pages/Cart/CartTotal';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = ({\n  cart,\n  convertPrice\n}) => {\n  _s();\n  // 상태 관리할 state 추가\n  const [cartState, setCartState] = useState(cart);\n  // 전체 선택 체크 여부 상태\n  const [isAllChecked, setIsAllChecked] = useState(false);\n  // 선택된 아이템 상태\n  const [selectedItems, setSelectedItems] = useState([]);\n  // 선택된 상품들의 합계들의 총합(결제금액) 상태 추가\n  // *selectedItemsTotal: 선택된 항목의 총 가격을 저장\n  const [selectedItemsTotal, setSelectedItemsTotal] = useState(0);\n\n  // 선택한 아이템의 합계를 업데이트하는 함수\n  //updateTotal: 선택된 항목의 총 가격을 계산하고 업데이트\n  const updateTotal = () => {\n    const total = calculateSelectedTotal();\n    setSelectedItemsTotal(total);\n  };\n\n  // 컴포넌트 마운트 후와 cart prop 변경 시 실행\n  useEffect(() => {\n    setCartState(cart); // 카트 상태 업데이트\n    updateTotal();\n  }, [cart]);\n\n  // 선택된 아이템 변경 시 실행\n  //selectedItems 배열이 변경될 때마다 선택된 항목의 총 가격을 업데이트\n  useEffect(() => {\n    updateTotal(); // 선택된 아이템이 변경될 때마다 합계 업데이트\n  }, [selectedItems]);\n\n  // handleRemoveFromCart: ID를 기반으로 카트에서 항목을 제거하고 총 가격을 업데이트\n  const handleRemoveFromCart = itemId => {\n    const updatedCart = cartState.filter(item => item.id !== itemId);\n    setCartState(updatedCart);\n    updateTotal();\n  };\n\n  //handleCheckAll: isAllChecked 상태를 토글하고 \n  //selectedItems 배열을 그에 맞게 업데이트합니다.\n  const handleCheckAll = () => {\n    setIsAllChecked(!isAllChecked);\n    const updatedSelectedItems = !isAllChecked ? cartState.map(item => item.id) : [];\n    setSelectedItems(updatedSelectedItems);\n  };\n\n  // 수량 감소 -> 합계 변동\n  const onDecrease = itemId => {\n    setCartState(prevCart => prevCart.map(item => item.id === itemId ? {\n      ...item,\n      quantity: Math.max(item.quantity - 1, 1)\n    } : item));\n    updateTotal();\n  };\n\n  // 수량 증가 -> 합계 변동\n  const onIncrease = itemId => {\n    setCartState(prevCart => prevCart.map(item => item.id === itemId ? {\n      ...item,\n      quantity: item.quantity + 1\n    } : item));\n    updateTotal();\n  };\n\n  // 카트에 상품 추가하는 함수\n  const addToCart = cartItem => {\n    setCartState(prevCart => [...prevCart, cartItem]);\n    updateTotal(); // 상품 추가 시 선택한 아이템의 합계 업데이트\n  };\n\n  //calculateSelectedTotal: 선택된 모든 항목의 총 가격을 계산\n  const calculateSelectedTotal = () => {\n    return selectedItems.reduce((total, itemId) => {\n      const selectedItem = cartState.find(item => item.id === itemId);\n      if (selectedItem) {\n        return total + selectedItem.productPriceFormatted * selectedItem.quantity;\n      }\n      return total;\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Cart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"path\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD604\\uC7AC \\uC704\\uCE58\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"\\uD648\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          title: \"\\uD604\\uC7AC \\uC704\\uCE58\",\n          children: \" > \\xA0 Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"CART\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"txt_01\",\n        children: \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\\uC5D0 \\uB2F4\\uAE34 \\uC0C1\\uD488\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CartHeader, {\n      isAllChecked: isAllChecked,\n      handleCheckAll: handleCheckAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CartList, {\n      cart: cartState // 수정된 상태를 전달\n      ,\n      onDecrease: onDecrease,\n      onIncrease: onIncrease,\n      handleAddToCart: addToCart // 상품 추가 함수 전달\n      ,\n      handleRemove: handleRemoveFromCart // 상품 제거 함수 전달\n      ,\n      convertPrice: convertPrice,\n      selectedItems: selectedItems // 선택된 아이템 전달\n      ,\n      setSelectedItems: setSelectedItems,\n      updateTotal: updateTotal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CartTotal, {\n      cart: cartState,\n      convertPrice: convertPrice,\n      selectedItems: selectedItems // 선택된 아이템 리스트 전달\n      ,\n      selectedItemsTotal: selectedItemsTotal // 선택된 아이템 합계 전달\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(Cart, \"i8bW6d0Qip68Kz6NlYlgR9NT7q8=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","CartHeader","CartList","CartTotal","Link","jsxDEV","_jsxDEV","Cart","cart","convertPrice","_s","cartState","setCartState","isAllChecked","setIsAllChecked","selectedItems","setSelectedItems","selectedItemsTotal","setSelectedItemsTotal","updateTotal","total","calculateSelectedTotal","handleRemoveFromCart","itemId","updatedCart","filter","item","id","handleCheckAll","updatedSelectedItems","map","onDecrease","prevCart","quantity","Math","max","onIncrease","addToCart","cartItem","reduce","selectedItem","find","productPriceFormatted","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","title","handleAddToCart","handleRemove","_c","$RefreshReg$"],"sources":["D:/MTest/ojoaproject/react/ojoa_project/src/pages/Cart/Cart.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../pages/Cart/Cart.css';\r\nimport CartHeader from '../../pages/Cart/CartHeader';\r\nimport CartList from '../../pages/Cart/CartList';\r\nimport CartTotal from '../../pages/Cart/CartTotal';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Cart = ({ cart, convertPrice }) => {\r\n\r\n    // 상태 관리할 state 추가\r\n    const [cartState, setCartState] = useState(cart);\r\n    // 전체 선택 체크 여부 상태\r\n    const [isAllChecked, setIsAllChecked] = useState(false);\r\n    // 선택된 아이템 상태\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n    // 선택된 상품들의 합계들의 총합(결제금액) 상태 추가\r\n    // *selectedItemsTotal: 선택된 항목의 총 가격을 저장\r\n    const [selectedItemsTotal, setSelectedItemsTotal] = useState(0);\r\n\r\n\r\n    // 선택한 아이템의 합계를 업데이트하는 함수\r\n    //updateTotal: 선택된 항목의 총 가격을 계산하고 업데이트\r\n    const updateTotal = () => {\r\n        const total = calculateSelectedTotal();\r\n        setSelectedItemsTotal(total);\r\n    };\r\n\r\n\r\n   // 컴포넌트 마운트 후와 cart prop 변경 시 실행\r\n    useEffect(() => {\r\n        setCartState(cart);   // 카트 상태 업데이트\r\n        updateTotal();\r\n    }, [cart]);\r\n\r\n\r\n   // 선택된 아이템 변경 시 실행\r\n    //selectedItems 배열이 변경될 때마다 선택된 항목의 총 가격을 업데이트\r\n    useEffect(() => {\r\n        updateTotal(); // 선택된 아이템이 변경될 때마다 합계 업데이트\r\n    }, [selectedItems]);\r\n\r\n\r\n    // handleRemoveFromCart: ID를 기반으로 카트에서 항목을 제거하고 총 가격을 업데이트\r\n    const handleRemoveFromCart = (itemId) => {\r\n        const updatedCart = cartState.filter((item) => item.id !== itemId);\r\n        setCartState(updatedCart);\r\n        updateTotal();\r\n    };\r\n\r\n//handleCheckAll: isAllChecked 상태를 토글하고 \r\n//selectedItems 배열을 그에 맞게 업데이트합니다.\r\n    const handleCheckAll = () => {\r\n        setIsAllChecked(!isAllChecked);\r\n        const updatedSelectedItems = !isAllChecked ? cartState.map((item) => item.id) : [];\r\n        setSelectedItems(updatedSelectedItems);\r\n    };\r\n\r\n\r\n    // 수량 감소 -> 합계 변동\r\n    const onDecrease = (itemId) => {\r\n        setCartState((prevCart) =>\r\n            prevCart.map((item) =>\r\n                item.id === itemId\r\n                    ? { ...item, quantity: Math.max(item.quantity - 1, 1) }\r\n                    : item\r\n            )\r\n        );\r\n        updateTotal(); \r\n    };\r\n\r\n    // 수량 증가 -> 합계 변동\r\n    const onIncrease = (itemId) => {\r\n        setCartState((prevCart) =>\r\n            prevCart.map((item) =>\r\n                item.id === itemId ? { ...item, quantity: item.quantity + 1 } : item\r\n            )\r\n        );\r\n        updateTotal();\r\n    };\r\n\r\n\r\n    // 카트에 상품 추가하는 함수\r\n    const addToCart = (cartItem) => {\r\n        setCartState((prevCart) => [...prevCart, cartItem]);\r\n        updateTotal(); // 상품 추가 시 선택한 아이템의 합계 업데이트\r\n    };\r\n\r\n//calculateSelectedTotal: 선택된 모든 항목의 총 가격을 계산\r\n    const calculateSelectedTotal = () => {\r\n        return selectedItems.reduce((total, itemId) => {\r\n            const selectedItem = cartState.find((item) => item.id === itemId);\r\n            if (selectedItem) {\r\n                return total + selectedItem.productPriceFormatted * selectedItem.quantity;\r\n            }\r\n            return total;\r\n        }, 0);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"Cart\">\r\n            <div className=\"path\">\r\n                <span>현재 위치</span>\r\n                <ol>\r\n                    <li>\r\n                        <Link to=\"/\">홈</Link>\r\n                    </li>\r\n                    <li title=\"현재 위치\"> &gt; &nbsp; Cart</li>\r\n                </ol>\r\n            </div>\r\n            <div className=\"title\">\r\n                <h2>CART</h2>\r\n                <div className=\"txt_01\">장바구니에 담긴 상품</div>\r\n            </div>\r\n\r\n            <CartHeader isAllChecked={isAllChecked} handleCheckAll={handleCheckAll} />\r\n\r\n            <CartList\r\n                cart={cartState} // 수정된 상태를 전달\r\n                onDecrease={onDecrease}\r\n                onIncrease={onIncrease}\r\n                handleAddToCart={addToCart} // 상품 추가 함수 전달\r\n                handleRemove={handleRemoveFromCart} // 상품 제거 함수 전달\r\n                convertPrice={convertPrice}\r\n                selectedItems={selectedItems} // 선택된 아이템 전달\r\n                setSelectedItems={setSelectedItems}\r\n                updateTotal={updateTotal}\r\n            />\r\n\r\n            <CartTotal\r\n                cart={cartState}\r\n                convertPrice={convertPrice}\r\n                selectedItems={selectedItems} // 선택된 아이템 리스트 전달\r\n                selectedItemsTotal={selectedItemsTotal} // 선택된 아이템 합계 전달\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Cart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}