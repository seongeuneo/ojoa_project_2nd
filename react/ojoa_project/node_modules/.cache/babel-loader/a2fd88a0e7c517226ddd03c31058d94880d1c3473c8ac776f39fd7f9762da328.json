{"ast":null,"code":"var _jsxFileName = \"D:\\\\MTest\\\\ojoaproject\\\\react\\\\ojoa_project\\\\src\\\\pages\\\\Qna\\\\Qna.jsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\nimport './Qna.css';\nimport QnaThumbNail from './QnaThumbNail';\nimport QnaFilter from './QnaFilter';\nimport QnaListItem from './QnaListItem';\nimport QnaTitleList from './QnaTitleList';\nimport QnaPageNationBtn from './QnaPageNationBtn';\nimport Modal from 'react-modal';\nimport { ModalProvider } from './QnaModal/ModalContext';\nimport QnaWriteBtn from './QnaWriteBtn';\nimport React, { useMemo, useCallback, useReducer, useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"INIT\":\n      {\n        return action.dataList;\n      }\n    case \"Create\":\n      {\n        const newState = [action.newItem, ...state];\n        localStorage.setItem(\"todo\", JSON.stringify(newState));\n        return newState;\n      }\n    default:\n      return state;\n  }\n  ; //switch\n} //reducer\n\n// 1) Context 생성\n// => 불필요한 랜더링을 방지하여 최적화 하기위해 \n//    Context 를 역할별로 분리한다.\nexport const TodoStateContext = /*#__PURE__*/React.createContext();\n// => todo 의 변경에 영향받는 컴포넌트를 위한 Context \nexport const TodoDispatchContext = /*#__PURE__*/React.createContext();\n// => dispath 함수 onCreate, onUpdate, onDelete 의 변경에\n//    영향받는 컴포넌트를 위한 Context\n\nfunction Qna() {\n  _s();\n  // ** Local Storage 적용 1\n  // => LocalStorage 의 Data 읽어, todo 초기화 하기  \n  const [todo, dispatch] = useReducer(reducer, []);\n  const idRef = useRef(0);\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  // ** localData Loading\n  // => Mount시 1회 실행 하도록 useEffect 에 빈 배열 전달\n  useEffect(() => {\n    const rawData = localStorage.getItem(\"todo\");\n    // => LocalStorage 의 Data 존재 확인\n    if (!rawData) {\n      setIsDataLoaded(true);\n      return;\n    }\n    const localData = JSON.parse(rawData);\n    if (localData.length === 0) {\n      setIsDataLoaded(true);\n      return;\n    }\n    // => localData 가 존재하면\n    //  -> create시 id값 생성을 위한 idRef 값 할당\n    //  -> Loading 된 Data를 State 변수 todo에 담기위해 dispatch 호출\n    //  -> setIsDataLoaded(true) : Loading 완료됨 표시 \n    idRef.current = localData.length;\n    dispatch({\n      type: \"INIT\",\n      dataList: localData\n    });\n    setIsDataLoaded(true);\n  }, []); //useEffect\n\n  // ** 일정추가 (Create) 함수 생성\n  const onCreate = title => {\n    dispatch({\n      type: \"Create\",\n      newItem: {\n        id: idRef.current,\n        title: title\n      }\n    }); //dispatch\n    idRef.current += 1;\n  }; //onCreate ( useCallback 을 적용하지않음 )\n\n  // ** TodoDispatchContext.Provider value 속성값\n  //    onCreate, onUpdate, onDelete 함수 최적화\n  // => 처음 한번만 (TodoList가 처음 리랜더링 될때) 실행되도록 메모이제이션 \n  const memoizedDispatches = useMemo(() => {\n    return {\n      onCreate\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ModalProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Qna\",\n      children: [/*#__PURE__*/_jsxDEV(TodoStateContext.Provider, {\n        value: todo,\n        children: /*#__PURE__*/_jsxDEV(TodoDispatchContext.Provider, {\n          value: memoizedDispatches,\n          children: [/*#__PURE__*/_jsxDEV(QnaThumbNail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(QnaFilter, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(QnaTitleList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(QnaListItem, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(QnaWriteBtn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(QnaPageNationBtn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pages/Qna/QnaWriteBtn\",\n          element: /*#__PURE__*/_jsxDEV(QnaWriteBtn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(Qna, \"f4p1uSwBpMVjZSyIptpwVcCwyvw=\");\n_c = Qna;\nexport default Qna;\nvar _c;\n$RefreshReg$(_c, \"Qna\");","map":{"version":3,"names":["QnaThumbNail","QnaFilter","QnaListItem","QnaTitleList","QnaPageNationBtn","Modal","ModalProvider","QnaWriteBtn","React","useMemo","useCallback","useReducer","useRef","useEffect","useState","jsxDEV","_jsxDEV","setAppElement","reducer","state","action","type","dataList","newState","newItem","localStorage","setItem","JSON","stringify","TodoStateContext","createContext","TodoDispatchContext","Qna","_s","todo","dispatch","idRef","isDataLoaded","setIsDataLoaded","rawData","getItem","localData","parse","length","current","onCreate","title","id","memoizedDispatches","children","className","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","Routes","Route","path","element","_c","$RefreshReg$"],"sources":["D:/MTest/ojoaproject/react/ojoa_project/src/pages/Qna/Qna.jsx"],"sourcesContent":["// import React from 'react';\r\nimport './Qna.css';\r\nimport QnaThumbNail from './QnaThumbNail';\r\nimport QnaFilter from './QnaFilter';\r\nimport QnaListItem from './QnaListItem';\r\nimport QnaTitleList from './QnaTitleList';\r\nimport QnaPageNationBtn from './QnaPageNationBtn';\r\nimport Modal from 'react-modal';\r\nimport { ModalProvider } from './QnaModal/ModalContext';\r\nimport QnaWriteBtn from './QnaWriteBtn';\r\nimport React, { useMemo, useCallback, useReducer, useRef, useEffect, useState } from \"react\";\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case \"INIT\": {\r\n            return action.dataList;\r\n        }\r\n        case \"Create\": {\r\n            const newState = [action.newItem, ...state];\r\n            localStorage.setItem(\"todo\", JSON.stringify(newState));\r\n            return newState;\r\n        }\r\n        default: return state;\r\n    }; //switch\r\n} //reducer\r\n\r\n// 1) Context 생성\r\n// => 불필요한 랜더링을 방지하여 최적화 하기위해 \r\n//    Context 를 역할별로 분리한다.\r\nexport const TodoStateContext = React.createContext();\r\n// => todo 의 변경에 영향받는 컴포넌트를 위한 Context \r\nexport const TodoDispatchContext = React.createContext();\r\n// => dispath 함수 onCreate, onUpdate, onDelete 의 변경에\r\n//    영향받는 컴포넌트를 위한 Context\r\n\r\nfunction Qna() {\r\n\r\n    // ** Local Storage 적용 1\r\n    // => LocalStorage 의 Data 읽어, todo 초기화 하기  \r\n    const [todo, dispatch] = useReducer(reducer, []);\r\n\r\n    const idRef = useRef(0);\r\n    const [isDataLoaded, setIsDataLoaded] = useState(false);\r\n    // ** localData Loading\r\n    // => Mount시 1회 실행 하도록 useEffect 에 빈 배열 전달\r\n    useEffect(() => {\r\n        const rawData = localStorage.getItem(\"todo\");\r\n        // => LocalStorage 의 Data 존재 확인\r\n        if (!rawData) {\r\n            setIsDataLoaded(true);\r\n            return;\r\n        }\r\n        const localData = JSON.parse(rawData);\r\n        if (localData.length === 0) {\r\n            setIsDataLoaded(true);\r\n            return;\r\n        }\r\n        // => localData 가 존재하면\r\n        //  -> create시 id값 생성을 위한 idRef 값 할당\r\n        //  -> Loading 된 Data를 State 변수 todo에 담기위해 dispatch 호출\r\n        //  -> setIsDataLoaded(true) : Loading 완료됨 표시 \r\n        idRef.current = localData.length;\r\n        dispatch({ type: \"INIT\", dataList: localData });\r\n        setIsDataLoaded(true);\r\n    }, []); //useEffect\r\n\r\n    // ** 일정추가 (Create) 함수 생성\r\n    const onCreate = (title) => {\r\n        dispatch({\r\n            type: \"Create\",\r\n            newItem: {\r\n                id: idRef.current,\r\n                title: title,\r\n            }\r\n        }); //dispatch\r\n        idRef.current += 1;\r\n    }; //onCreate ( useCallback 을 적용하지않음 )\r\n\r\n    // ** TodoDispatchContext.Provider value 속성값\r\n    //    onCreate, onUpdate, onDelete 함수 최적화\r\n    // => 처음 한번만 (TodoList가 처음 리랜더링 될때) 실행되도록 메모이제이션 \r\n    const memoizedDispatches = useMemo(() => {\r\n        return { onCreate };\r\n    }, []);\r\n\r\n    return (\r\n        <ModalProvider>\r\n            <div className=\"Qna\">\r\n                <TodoStateContext.Provider value={todo}>\r\n                    <TodoDispatchContext.Provider value={memoizedDispatches}>\r\n                        {/* <TodoDispatchContext.Provider value={{onCreate, onUpdate, onDelete}}>  \r\n            => cONTEXT 분리 했어도 최적화 적용 되지 않음  */}\r\n                        <QnaThumbNail />\r\n                        <QnaFilter />\r\n                        <QnaTitleList />\r\n                        <QnaListItem />\r\n\r\n                        <QnaWriteBtn />\r\n                        <QnaPageNationBtn />\r\n                    </TodoDispatchContext.Provider>\r\n                </TodoStateContext.Provider>\r\n                <Routes>\r\n                    <Route path=\"/pages/Qna/QnaWriteBtn\" element={<QnaWriteBtn />} />\r\n                </Routes>\r\n            </div>\r\n        </ModalProvider>\r\n    );\r\n}\r\n\r\nexport default Qna;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}